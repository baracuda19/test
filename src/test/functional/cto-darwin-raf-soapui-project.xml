<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="cto-darwin-raf" resourceRoot="" soapui-version="5.0.0" abortOnError="false" runType="SEQUENTIAL" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\opt\soapui-4.5.1\bin\"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Print Report Statistics" value="true"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\temp"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Limit" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Setup"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="Initialize Data"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAF - list" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#baseUrl}</con:endpoint></con:endpoints><con:resource name="List" path="v1/lists"><con:settings/><con:parameters/><con:resource name="Cities" path="cities"><con:settings/><con:parameters/><con:method name="OldMultiAirportsCities" method="GET"><con:settings/><con:parameters><con:parameter><con:name>country</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:cit="http://localhost/cto-darwin-raf/v1/list/cities">cit:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:cit="http://localhost/cto-darwin-raf/v1/list/cities">cit:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="for usa" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:8080/cto-darwin-raf</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Airports" path="airports"><con:settings/><con:parameters/><con:resource name="OrigsDests" path="/supported/origins-destinations"><con:settings/><con:parameters><con:parameter><con:name>originregion</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destinationregion</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>origincountry</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destinationcountry</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="OldCityPairsLookup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>originregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>origincountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationcountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:orig="http://localhost/cto-darwin-raf/v1/lists/airports/supported/origins-destinations">orig:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:orig="http://localhost/cto-darwin-raf/v1/lists/airports/supported/origins-destinations">orig:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:orig="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations">orig:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400 500</con:status><con:params/><con:element xmlns:orig="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations">orig:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="OldAirportsAtCities" method="GET"><con:settings/><con:parameters><con:parameter><con:name>city</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:air="http://localhost/cto-darwin-raf/v1/list/airports">air:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:air="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports">air:Fault</con:element></con:representation><con:request name="for washington in usa" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:8080/cto-darwin-raf</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="supported" path="supported"><con:settings/><con:parameters/><con:resource name="shop" path="shop"><con:settings/><con:parameters/><con:resource name="flights" path="flights"><con:settings/><con:parameters/><con:resource name="origins-destinations" path="origins-destinations"><con:settings/><con:parameters/><con:method name="CityPairsLookup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>originregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>origincountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationcountry</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters></con:method></con:resource></con:resource><con:resource name="themes" path="themes"><con:settings/><con:parameters/><con:resource name="{theme}" path="{theme}"><con:settings/><con:parameters><con:parameter><con:name>theme</con:name><con:value>theme</con:value><con:style>TEMPLATE</con:style><con:default>theme</con:default></con:parameter></con:parameters><con:method name="DestinationsAtTheme" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:beac="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/shop/themes/BEACH">beac:Response</con:element></con:representation></con:method></con:resource><con:method name="ThemesLookup" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:them="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/shop/themes">them:Response</con:element></con:representation></con:method></con:resource></con:resource><con:resource name="cities" path="cities"><con:settings/><con:parameters/><con:resource name="airports" path="{city}/airports"><con:settings/><con:parameters><con:parameter><con:name>city</con:name><con:value>city</con:value><con:style>TEMPLATE</con:style><con:default>city</con:default></con:parameter></con:parameters><con:method name="AirportsAtCity" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:air="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/cities/WAS/airports">air:Response</con:element></con:representation></con:method></con:resource><con:method name="MultiAirportsCities" method="GET"><con:settings/><con:parameters><con:parameter><con:name>country</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:cit="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/cities">cit:Response</con:element></con:representation></con:method></con:resource><con:resource name="forecast" path="forecast"><con:settings/><con:parameters/><con:resource name="flights" path="flights"><con:settings/><con:parameters/><con:resource name="origins-destinations" path="origins-destinations"><con:settings/><con:parameters/><con:method name="FareForecastCityPairsLookup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>originregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>origincountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationcountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 400 404</con:status><con:params/><con:element xmlns:orig="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/forecast/flights/origins-destinations">orig:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:orig="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/forecast/flights/origins-destinations">orig:Response</con:element></con:representation></con:method></con:resource></con:resource></con:resource><con:resource name="historical" path="historical"><con:settings/><con:parameters/><con:resource name="flights" path="flights"><con:settings/><con:parameters/><con:resource name="origins-destinations" path="origins-destinations"><con:settings/><con:parameters/><con:method name="FareRangeCityPairsLookup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>originregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationregion</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>origincountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>destinationcountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:orig="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/flights/origins-destinations">orig:Response</con:element></con:representation></con:method></con:resource></con:resource><con:resource name="seasonality" path="seasonality"><con:settings/><con:parameters/><con:resource name="airports" path="airports"><con:settings/><con:parameters/><con:method name="SeasonalityAirportsLookup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>region</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>country</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:air="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/seasonality/airports">air:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:air="http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/seasonality/airports">air:Fault</con:element></con:representation></con:method></con:resource></con:resource></con:resource><con:resource name="countries" path="countries"><con:settings/><con:parameters/><con:method name="CountriesLookup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>pointofsalecountry</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters></con:method></con:resource><con:resource name="pointofsalecountries" path="pointofsalecountries"><con:settings/><con:parameters/><con:method name="PointOfSaleCountriesLookup" method="GET"><con:settings/><con:parameters/></con:method></con:resource></con:resource></con:resource></con:interface><con:testSuite name="Setup"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Properties" searchProperties="true" id="90a38548-815f-4b5a-ae0b-a65a71fe7b8a"><con:settings/><con:testStep type="groovy" name="Set MOM Properties"><con:settings/><con:config><script>def projectDir = new File(testRunner.testCase.testSuite.project.path).parent
System.setProperty("mom.config.xml.file", "momconfig.xml")
System.setProperty("mom.config.dir", "file:" + projectDir + "/../../main/resources")
System.setProperty("mom.metrics.disable", "true")
System.setProperty("mom.discreteevents.disable", "true")
log.info "MOM system properties have been set!"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Initialize Data" searchProperties="true" id="96acbe3e-80e1-4ca9-976a-02e35f2fbdca"><con:settings/><con:testStep type="httprequest" name="Load Disney Theme"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Disney Theme" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~TH~DISNEY</con:endpoint><con:request>[
  "MCO",
  "LAX"
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Beach Theme"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Beach Theme" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~TH~BEACH</con:endpoint><con:request>[
  "FLL",
  "HNL",
  "JAX",
  "LAX",
  "MIA",
  "OGG",
  "ORF",
  "PBI",
  "PNS",
  "RDU",
  "RSW",
  "SAN",
  "SNA",
  "STT",
  "STX",
  "TPA"
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Flight Fare Forecast"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Flight Fare Forecast" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~FF~${#Project#origin}~${#Project#destination}~${#Project#departureDate}~${#Project#departureDate}</con:endpoint><con:request>{
  "HighestPredictedFare": 991,
  "CurrencyCode": "USD",
  "LowestPredictedFare": 680
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Destination Seasonality"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Destination Seasonality" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~DS~${#Project#destination}</con:endpoint><con:request>[
  {
    "YearWeekNumber": "1",
    "WeekStartDate": "2013-12-30",
    "WeekEndDate": "2014-01-05",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "2",
    "WeekStartDate": "2014-01-06",
    "WeekEndDate": "2014-01-12",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "3",
    "WeekStartDate": "2014-01-13",
    "WeekEndDate": "2014-01-19",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "4",
    "WeekStartDate": "2014-01-20",
    "WeekEndDate": "2014-01-26",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "5",
    "WeekStartDate": "2014-01-27",
    "WeekEndDate": "2014-02-02",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "6",
    "WeekStartDate": "2014-02-03",
    "WeekEndDate": "2014-02-09",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "7",
    "WeekStartDate": "2014-02-10",
    "WeekEndDate": "2014-02-16",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "8",
    "WeekStartDate": "2014-02-17",
    "WeekEndDate": "2014-02-23",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "9",
    "WeekStartDate": "2014-02-24",
    "WeekEndDate": "2014-03-02",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "10",
    "WeekStartDate": "2014-03-03",
    "WeekEndDate": "2014-03-09",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "11",
    "WeekStartDate": "2014-03-10",
    "WeekEndDate": "2014-03-16",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "12",
    "WeekStartDate": "2014-03-17",
    "WeekEndDate": "2014-03-23",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "13",
    "WeekStartDate": "2014-03-24",
    "WeekEndDate": "2014-03-30",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "14",
    "WeekStartDate": "2014-03-31",
    "WeekEndDate": "2014-04-06",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "15",
    "WeekStartDate": "2014-04-07",
    "WeekEndDate": "2014-04-13",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "16",
    "WeekStartDate": "2014-04-14",
    "WeekEndDate": "2014-04-20",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "17",
    "WeekStartDate": "2014-04-21",
    "WeekEndDate": "2014-04-27",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "18",
    "WeekStartDate": "2014-04-28",
    "WeekEndDate": "2014-05-04",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "19",
    "WeekStartDate": "2014-05-05",
    "WeekEndDate": "2014-05-11",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "20",
    "WeekStartDate": "2014-05-12",
    "WeekEndDate": "2014-05-18",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "21",
    "WeekStartDate": "2014-05-19",
    "WeekEndDate": "2014-05-25",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "22",
    "WeekStartDate": "2014-05-26",
    "WeekEndDate": "2014-06-01",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "23",
    "WeekStartDate": "2014-06-02",
    "WeekEndDate": "2014-06-08",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "24",
    "WeekStartDate": "2014-06-09",
    "WeekEndDate": "2014-06-15",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "25",
    "WeekStartDate": "2014-06-16",
    "WeekEndDate": "2014-06-22",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "26",
    "WeekStartDate": "2014-06-23",
    "WeekEndDate": "2014-06-29",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "27",
    "WeekStartDate": "2014-06-30",
    "WeekEndDate": "2014-07-06",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "28",
    "WeekStartDate": "2014-07-07",
    "WeekEndDate": "2014-07-13",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "29",
    "WeekStartDate": "2014-07-14",
    "WeekEndDate": "2014-07-20",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "30",
    "WeekStartDate": "2014-07-21",
    "WeekEndDate": "2014-07-27",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "31",
    "WeekStartDate": "2014-07-28",
    "WeekEndDate": "2014-08-03",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "32",
    "WeekStartDate": "2013-08-05",
    "WeekEndDate": "2013-08-11",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "33",
    "WeekStartDate": "2013-08-12",
    "WeekEndDate": "2013-08-18",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "34",
    "WeekStartDate": "2013-08-19",
    "WeekEndDate": "2013-08-25",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "35",
    "WeekStartDate": "2013-08-26",
    "WeekEndDate": "2013-09-01",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "36",
    "WeekStartDate": "2013-09-02",
    "WeekEndDate": "2013-09-08",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "37",
    "WeekStartDate": "2013-09-09",
    "WeekEndDate": "2013-09-15",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "38",
    "WeekStartDate": "2013-09-16",
    "WeekEndDate": "2013-09-22",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "39",
    "WeekStartDate": "2013-09-23",
    "WeekEndDate": "2013-09-29",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "40",
    "WeekStartDate": "2013-09-30",
    "WeekEndDate": "2013-10-06",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "41",
    "WeekStartDate": "2013-10-07",
    "WeekEndDate": "2013-10-13",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "42",
    "WeekStartDate": "2013-10-14",
    "WeekEndDate": "2013-10-20",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "43",
    "WeekStartDate": "2013-10-21",
    "WeekEndDate": "2013-10-27",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "44",
    "WeekStartDate": "2013-10-28",
    "WeekEndDate": "2013-11-03",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "45",
    "WeekStartDate": "2013-11-04",
    "WeekEndDate": "2013-11-10",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "46",
    "WeekStartDate": "2013-11-11",
    "WeekEndDate": "2013-11-17",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "47",
    "WeekStartDate": "2013-11-18",
    "WeekEndDate": "2013-11-24",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "48",
    "WeekStartDate": "2013-11-25",
    "WeekEndDate": "2013-12-01",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "49",
    "WeekStartDate": "2013-12-02",
    "WeekEndDate": "2013-12-08",
    "SeasonalityIndicator": "Low"
  },
  {
    "YearWeekNumber": "50",
    "WeekStartDate": "2013-12-09",
    "WeekEndDate": "2013-12-15",
    "SeasonalityIndicator": "Medium"
  },
  {
    "YearWeekNumber": "51",
    "WeekStartDate": "2013-12-16",
    "WeekEndDate": "2013-12-22",
    "SeasonalityIndicator": "High"
  },
  {
    "YearWeekNumber": "52",
    "WeekStartDate": "2013-12-23",
    "WeekEndDate": "2013-12-29",
    "SeasonalityIndicator": "Low"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Average Ticket"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Average Ticket" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~FR~${#Project#origin}~${#Project#destination}~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>{
  "DepartureDateTime": "${#Project#departureDate}T00:00:00",
  "MaximumFare": 925.08,
  "Count": "Low",
  "MinimumFare": 489.25,
  "ReturnDateTime": "${#Project#returnDate}T00:00:00",
  "CurrencyCode": "USD",
  "MedianFare": 671.24
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Average Ticket for CI1-CI2 OR1DE1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Average Ticket for CI1-CI2 OR1DE1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~FR~OR1~DE1~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>{
  "DepartureDateTime": "${#Project#departureDate}T00:00:00",
  "MaximumFare": 825.08,
  "Count": "Low",
  "MinimumFare": 389.25,
  "ReturnDateTime": "${#Project#returnDate}T00:00:00",
  "CurrencyCode": "USD",
  "MedianFare": 571.24
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Average Ticket for CI1-CI2 OR2DE2"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Average Ticket for CI1-CI2 OR2DE2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~FR~OR2~DE2~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>{
  "DepartureDateTime": "${#Project#departureDate}T00:00:00",
  "MaximumFare": 815.08,
  "Count": "Low",
  "MinimumFare": 379.25,
  "ReturnDateTime": "${#Project#returnDate}T00:00:00",
  "CurrencyCode": "USD",
  "MedianFare": 561.24
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Average Ticket for CI1-CI2 OR1DE2"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Average Ticket for CI1-CI2 OR1DE2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~FR~OR1~DE2~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>{
  "DepartureDateTime": "${#Project#departureDate}T00:00:00",
  "MaximumFare": 805.08,
  "Count": "Low",
  "MinimumFare": 369.25,
  "ReturnDateTime": "${#Project#returnDate}T00:00:00",
  "CurrencyCode": "USD",
  "MedianFare": 551.24
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Average Ticket for CI1-CI2 OR2DE1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Average Ticket for CI1-CI2 OR2DE1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~FR~OR2~DE1~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>{
  "DepartureDateTime": "${#Project#departureDate}T00:00:00",
  "MaximumFare": 795.08,
  "Count": "Low",
  "MinimumFare": 359.25,
  "ReturnDateTime": "${#Project#returnDate}T00:00:00",
  "CurrencyCode": "USD",
  "MedianFare": 541.24
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Cities for US"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Cities for US" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~MAC~US</con:endpoint><con:request>[{"code":"TUS","name":"TUCSON"},{"code":"WAS","name":"WASHINGTON"}]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Airports for WAS"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Airports for WAS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~MAC~WAS</con:endpoint><con:request>[{"code":"BWI","name":"BALTIMORE WASHNTN"},{"code":"DCA","name":"WASHINGTON REAGAN"},{"code":"IAD","name":"WASHINGTON DULLES"},{"code":"OTHER","name":"Others"}]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Airports for TUS"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Airports for TUS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~MAC~TUS</con:endpoint><con:request>[{"code":"TUS","name":"TUCSON"}]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Airports for CI1">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="Load Airports for CI1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~MAC~CI1</con:endpoint>
          <con:request>[{"code":"OR1","name":"airport"},{"code":"OR2","name":"airport"}]</con:request>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration><codes>200</codes></con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Message">
            <con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="Load Airports for CI2">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="Load Airports for CI2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~MAC~CI2</con:endpoint>
          <con:request>[{"code":"DE1","name":"airport"},{"code":"DE2","name":"airport"}]</con:request>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Message">
            <con:configuration>
              <path>//*[name()='message']</path>
              <content>Key/value inserted</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="Load countries for DE POS"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load countries for DE POS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~DE~LC~CTRS</con:endpoint><con:request>["DE"]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load intelligence airports"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load intelligence airports" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~INTELLIGENCE~AIRPORTS</con:endpoint><con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"/data/intelligence-airports.json").text}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>compress</con:name><con:value>false</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Load Fare Forecast markets list"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Fare Forecast markets list" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~FF~MARKETS~CURRENT</con:endpoint><con:request>[
  "LAX-LHR",
  "SAN-LAS",
  "LHR-LAX"]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Fare Range markets list"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Fare Range markets list" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~FR~MARKETS~CURRENT</con:endpoint><con:request>[
  "LAX-DAY",
  "MCO-LHR",
  "LHR-MCO"
 ]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Top Destinations for All Origins"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Top Destinations for All Origins" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~TD~ALLORIGINS~OVERALL~w2</con:endpoint><con:request>[
  {
    "Rank": 1,
    "DestinationLocation": "NYC"
  },  
  {
    "Rank": 2,
    "DestinationLocation": "DFW"
  },
  {
    "Rank": 3,
    "DestinationLocation": "MIA"
  },  
  {
    "Rank": 4,
    "DestinationLocation": "LAX"
  },  
  {
    "Rank": 5,
    "DestinationLocation": "SFO"
  },  
  {
    "Rank": 6,
    "DestinationLocation": "ROM"
  },  
  {
    "Rank": 7,
    "DestinationLocation": "LON"
  },  
  {
    "Rank": 8,
    "DestinationLocation": "WAW"
  },  
  {
    "Rank": 9,
    "DestinationLocation": "FRA"
  },  
  {
    "Rank": 10,
    "DestinationLocation": "ALB"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Top Destinations for Origin and Overall"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Top Destinations for Origin and Overall" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~TD~${#Project#origin}~OVERALL~w2</con:endpoint><con:request>[
  {
    "Rank": 1,
    "DestinationLocation": "OKC"
  },
  {
    "Rank": 2,
    "DestinationLocation": "NYC"
  },  
  {
    "Rank": 3,
    "DestinationLocation": "${#Project#destination}"
  },
  {
    "Rank": 4,
    "DestinationLocation": "KRK"
  },  
  {
    "Rank": 5,
    "DestinationLocation": "LAX"
  },
  {
    "Rank": 6,
    "DestinationLocation": "MUC"
  }
  
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Top Destinations for Origin and Domestic"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Top Destinations for Origin and Domestic" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~TD~${#Project#origin}~DOMESTIC~w2</con:endpoint><con:request>[
  {
    "Rank": 1,
    "DestinationLocation": "OKC"
  },
  {
    "Rank": 2,
    "DestinationLocation": "NYC"
  },
  {
    "Rank": 3,
    "DestinationLocation": "LAX"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Top Destinations for Origin Country and International"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Top Destinations for Origin Country and International" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/IntelligenceAirShopData/v1~TD~${#Project#originCountry}~INTERNATIONAL~w2</con:endpoint><con:request>[
  {
    "Rank": 1,
    "DestinationLocation": "ROM"
  },  
  {
    "Rank": 2,
    "DestinationLocation": "KRK"
  },
  {
    "Rank": 3,
    "DestinationLocation": "WAW"
  },  
  {
    "Rank": 4,
    "DestinationLocation": "FRA"
  },  
  {
    "Rank": 5,
    "DestinationLocation": "SYD"
  },  
  {
    "Rank": 6,
    "DestinationLocation": "MBL"
  },  
  {
    "Rank": 7,
    "DestinationLocation": "TYO"
  },  
  {
    "Rank": 8,
    "DestinationLocation": "RIO"
  },  
  {
    "Rank": 9,
    "DestinationLocation": "BER"
  },  
  {
    "Rank": 10,
    "DestinationLocation": "ANK"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Markets into Edge Cache"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Markets into Edge Cache" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/v1~MARKETS</con:endpoint><con:request>[
  {
    "market": "${#Project#origin}-${#Project#destination}",
    "type": "SDS",
    "pcc": "E8KE"
  },
  {
    "market": "${#Project#destination}-${#Project#origin}",
    "type": "SDS",
    "pcc": "E8KE"
  },
  {
    "market": "CI1-CI2",
    "type": "SDS",
    "pcc": "F8SE"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Refresh Markets in RAF"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Refresh Markets in RAF" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/markets/update</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='update-status']</path><content>Markets have been updated successfully</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Initialize Data - calendar" searchProperties="true" id="11d7013d-6e45-42b4-8296-6c40803c212d"><con:settings/><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~${#Project#origin}~${#Project#destination}~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 443.6,
  "CurrencyCode": "USD",
  "LowestNonStopFare": "N/A"
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop - 9lo"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop - 9lo" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~${#Project#origin}~${#Project#destination}~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(9).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": "N/A",
  "CurrencyCode": "USD",
  "LowestNonStopFare": "N/A"
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop with Country Code"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop with Country Code" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~${#Project#pointofsalecountry}~${#Project#origin}~${#Project#destination}~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 443.6,
  "CurrencyCode": "USD",
  "LowestNonStopFare": "N/A"
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR1-DE1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR1-DE1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR1~DE1~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 100.1,
  "CurrencyCode": "USD",
  "LowestNonStopFare": 1000
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR1-DE2"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR1-DE2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR1~DE2~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 1001.1,
  "CurrencyCode": "USD",
  "LowestNonStopFare": 1001
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR2-DE1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR2-DE1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR2~DE1~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 1003.1,
  "CurrencyCode": "USD",
  "LowestNonStopFare": 1005
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR2-DE2"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR2-DE2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR2~DE1~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 1002.1,
  "CurrencyCode": "USD",
  "LowestNonStopFare": 102.1
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR1-PROJECT-dest"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR1-PROJECT-dest" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR1~${#Project#destination}~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 1002.1,
  "CurrencyCode": "USD",
  "LowestNonStopFare": 102.1
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR2-PROJECT-dest"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR2-PROJECT-dest" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR2~${#Project#destination}~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 104.1,
  "CurrencyCode": "USD",
  "LowestNonStopFare": 1022.1
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR1-DE1 - na"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR1-DE1 - na" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR1~DE1~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(9).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": "N/A",
  "CurrencyCode": "USD",
  "LowestNonStopFare": 1000
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Future Date Lead Fare Shop OR1-DE2 - na"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Future Date Lead Fare Shop OR1-DE2 - na" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/CalendarShopData/v1~US~OR1~DE2~${#Project#departureDate}~${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(9).format('yyyy-MM-dd')}</con:endpoint><con:request>{
  "LowestFare": 1001.1,
  "CurrencyCode": "USD",
  "LowestNonStopFare": "N/A"
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Initialize Data - SDS" searchProperties="true" id="b14ae643-7a44-46ed-9518-6357402adbdd"><con:settings/><con:testStep type="httprequest" name="Load Single Date Shop"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Single Date Shop" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/SingleDateShopData/v1~US~${#Project#origin}~${#Project#destination}~${#Project#departureDateInstaflights}~${#Project#returnDateInstaflights}</con:endpoint><con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"/single-date-shop.txt").text}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>compress</con:name><con:value>true</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Load Single Date Shop w/ Additional Fares"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Single Date Shop w/ Additional Fares" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/SingleDateShopData/v1~US~${#Project#destination}~${#Project#origin}~${#Project#departureDateInstaflights}~${#Project#returnDateInstaflights}</con:endpoint><con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"../resources/isell-reponses/responseAdditionalFare.json").text}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>compress</con:name><con:value>true</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Load Single Date Shop with Country Code"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Single Date Shop with Country Code" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/SingleDateShopData/v1~${#Project#pointofsalecountry}~${#Project#origin}~${#Project#destination}~${#Project#departureDateInstaflights}~${#Project#returnDateInstaflights}</con:endpoint><con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"/single-date-shop.txt").text}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>compress</con:name><con:value>true</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Load Single Date Shop or1-de1">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="Load Single Date Shop or1-de1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/admin/cache/SingleDateShopData/v1~${#Project#pointofsalecountry}~OR1~DE1~${#Project#departureDateInstaflights}~${#Project#returnDateInstaflights}</con:endpoint>
          <con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"/data/or1-de1.sds.json").text}</con:request>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Message">
            <con:configuration>
              <path>//*[name()='message']</path>
              <content>Key/value inserted</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>compress</con:name>
              <con:value>true</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          </con:parameters>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="Load Single Date Shop or1-de2">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="Load Single Date Shop or1-de2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/admin/cache/SingleDateShopData/v1~${#Project#pointofsalecountry}~OR1~DE2~${#Project#departureDateInstaflights}~${#Project#returnDateInstaflights}</con:endpoint>
          <con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"/data/or1-de2.sds.json").text}</con:request>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Message">
            <con:configuration>
              <path>//*[name()='message']</path>
              <content>Key/value inserted</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>compress</con:name>
              <con:value>true</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          </con:parameters>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="Load Single Date Shop or2-de1">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="Load Single Date Shop or2-de1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/admin/cache/SingleDateShopData/v1~${#Project#pointofsalecountry}~OR2~DE1~${#Project#departureDateInstaflights}~${#Project#returnDateInstaflights}</con:endpoint>
          <con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"/data/or2-de1.sds.json").text}</con:request>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Message">
            <con:configuration>
              <path>//*[name()='message']</path>
              <content>Key/value inserted</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>compress</con:name>
              <con:value>true</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          </con:parameters>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="Load Single Date Shop or2-de2">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="Load Single Date Shop or2-de2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/admin/cache/SingleDateShopData/v1~${#Project#pointofsalecountry}~OR2~DE2~${#Project#departureDateInstaflights}~${#Project#returnDateInstaflights}</con:endpoint>
          <con:request>${= new File(new File(testRunner.testCase.testSuite.project.path).parent,"/data/or2-de2.sds.json").text}</con:request>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Message">
            <con:configuration>
              <path>//*[name()='message']</path>
              <content>Key/value inserted</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>compress</con:name>
              <con:value>true</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          </con:parameters>
        </con:config>
      </con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Initialize Data - destination finder" searchProperties="true" id="aedf0f7a-d589-4198-b0ba-31ab298789df"><con:settings/><con:testStep type="httprequest" name="Load Destination Lead Fare Shop"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Destination Lead Fare Shop" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/DestinationFareData/v1~US~${#Project#origin}~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>[
  {
    "LowestFare": 622.1,
    "DestinationLocation": "FSD",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 1058.5,
    "DestinationLocation": "FNT",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 398.6,
    "DestinationLocation": "DAY",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 387.1,
    "DestinationLocation": "OMA",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 471.95,
    "DestinationLocation": "OGG",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 563.6,
    "DestinationLocation": "${#Project#destination}",
    "LowestNonStopFare": 981.8,
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 539.1,
    "DestinationLocation": "MEM",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 245.1,
    "DestinationLocation": "ELP",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 447.8,
    "DestinationLocation": "MSP",
    "LowestNonStopFare": 447.8,
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 285.1,
    "DestinationLocation": "IND",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 280.1,
    "DestinationLocation": "FLL",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 280.1,
    "DestinationLocation": "KRK",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 350.1,
    "DestinationLocation": "MUC",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  }

]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Destination Lead Fare Shop with Country Code"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Destination Lead Fare Shop with Country Code" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/DestinationFareData/v1~${#Project#pointofsalecountry}~${#Project#origin}~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>[
  {
    "LowestFare": 622.1,
    "DestinationLocation": "FSD",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 1058.5,
    "DestinationLocation": "FNT",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 398.6,
    "DestinationLocation": "DAY",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 387.1,
    "DestinationLocation": "OMA",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 471.95,
    "DestinationLocation": "OGG",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 563.6,
    "DestinationLocation": "${#Project#destination}",
    "LowestNonStopFare": 981.8,
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 539.1,
    "DestinationLocation": "MEM",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 245.1,
    "DestinationLocation": "ELP",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 447.8,
    "DestinationLocation": "MSP",
    "LowestNonStopFare": 447.8,
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 285.1,
    "DestinationLocation": "IND",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 280.1,
    "DestinationLocation": "FLL",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 280.1,
    "DestinationLocation": "KRK",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Load Destination Lead Fare Shop second origin"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Load Destination Lead Fare Shop second origin" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/DestinationFareData/v1~US~${#Project#secondorigin}~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>[
  {
    "LowestFare": 622.1,
    "DestinationLocation": "MEX",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 1058.5,
    "DestinationLocation": "FRA",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 398.6,
    "DestinationLocation": "MUC",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 387.1,
    "DestinationLocation": "LHR",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 471.95,
    "DestinationLocation": "OGG",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 563.6,
    "DestinationLocation": "${#Project#destination}",
    "LowestNonStopFare": 981.8,
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 539.1,
    "DestinationLocation": "MEM",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 245.1,
    "DestinationLocation": "ELP",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 447.8,
    "DestinationLocation": "MSP",
    "LowestNonStopFare": 447.8,
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 285.1,
    "DestinationLocation": "IND",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  },
  {
    "LowestFare": 280.1,
    "DestinationLocation": "FLL",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 280.1,
    "DestinationLocation": "KRK",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Destination Lead Fare Shop OR1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Destination Lead Fare Shop OR1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/DestinationFareData/v1~US~OR1~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>[
  {
    "LowestFare": 666.12,
    "DestinationLocation": "DE1",
    "CurrencyCode": "USD",
    "LowestNonStopFare": 1000.12
  },
  {
    "LowestFare": 777.13,
    "DestinationLocation": "DE2",
    "CurrencyCode": "USD",
    "LowestNonStopFare": 1410.13
  },
  {
    "LowestFare": 398.6,
    "DestinationLocation": "DE3",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Destination Lead Fare Shop OR2"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Destination Lead Fare Shop OR2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/DestinationFareData/v1~US~OR2~${#Project#departureDate}~${#Project#returnDate}</con:endpoint><con:request>[
  {
    "LowestFare": 1000.12,
    "DestinationLocation": "DE1",
    "CurrencyCode": "USD",
    "LowestNonStopFare": 666.12
  },
  {
    "LowestFare": 1410.13,
    "DestinationLocation": "DE2",
    "CurrencyCode": "USD",
    "LowestNonStopFare": 777.13
  },
  {
    "LowestFare": 398.6,
    "DestinationLocation": "DE4",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Destination Lead Fare Shop OR1 - second return"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Destination Lead Fare Shop OR1 - second return" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/DestinationFareData/v1~US~OR1~${#Project#departureDate}~${#Project#secondReturnDate}</con:endpoint><con:request>[
  {
    "LowestFare": "N/A",
    "DestinationLocation": "DE1",
    "CurrencyCode": "USD",
    "LowestNonStopFare": 1000.12
  },
  {
    "LowestFare": 777.13,
    "DestinationLocation": "DE2",
    "CurrencyCode": "USD",
    "LowestNonStopFare": 1410.13
  },
  {
    "LowestFare": 398.6,
    "DestinationLocation": "DE3",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Destination Lead Fare Shop OR2 - second return"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Destination Lead Fare Shop OR2 - second return" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/DestinationFareData/v1~US~OR2~${#Project#departureDate}~${#Project#secondReturnDate}</con:endpoint><con:request>[
  {
    "LowestFare": 1000.12,
    "DestinationLocation": "DE1",
    "CurrencyCode": "USD",
    "LowestNonStopFare": "N/A"
  },
  {
    "LowestFare": 1410.13,
    "DestinationLocation": "DE2",
    "CurrencyCode": "USD",
    "LowestNonStopFare": 777.13
  },
  {
    "LowestFare": 398.6,
    "DestinationLocation": "DE4",
    "LowestNonStopFare": "N/A",
    "CurrencyCode": "USD"
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Single Date Shopping"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Single Date Shopping" searchProperties="true" id="8e0e1aa6-da7b-4a1a-8b76-4efd1c1070a4"><con:settings/><con:testStep type="httprequest" name="Get Single Date Shop With All Parameters"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Next Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='nextResults']]/*[name()='href'], 'offset=51')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With All Parameters - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Next Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='nextResults']]/*[name()='href'], 'offset=51')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=%20%201%20')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>      ${#Project#origin}      </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>     ${#Project#destination}  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>  ${#Project#departureDateInstaflights}       </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>      ${#Project#returnDateInstaflights}     </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>  1 </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>      50        </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>    totalfare          </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>         asc          </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>  departuretime  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value> asc    </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>      100   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>  1000    </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Minimum Parameters"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Minimum Parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Next Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='nextResults']]/*[name()='href'], 'offset=51')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Offset"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Offset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Next Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='nextResults']]/*[name()='href'], 'offset=101')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=51')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Previous Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='prevResults']]/*[name()='href'], 'offset=1')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>51</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>dsc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Next Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='nextResults']]/*[name()='href'], 'offset=51')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;pointofsalecountry=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop Without Additional Fares"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop Without Additional Fares" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="haven't additional fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def links = holder.getNodeValues("//raf:e/raf:TPA_Extensions/raf:AdditionalFares")
assert links.size() == 0
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With  Additional Fares"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With  Additional Fares" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="has additional fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def links = holder.getNodeValues("//raf:e/raf:TPA_Extensions/raf:AdditionalFares")
assert links.size() > 0
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includeadditionalfares</con:name><con:value>true</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With  Additional Fares - pass thru"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With  Additional Fares - pass thru" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Next Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='nextResults']]/*[name()='href'], 'offset=51')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="has additional fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def links = holder.getNodeValues("//raf:e/raf:TPA_Extensions/raf:AdditionalFares")
assert links.size() > 0
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>XXX</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includeadditionalfares</con:name><con:value>true</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop Without  Additional Fares - pass thru"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop Without  Additional Fares - pass thru" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Next Results Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='nextResults']]/*[name()='href'], 'offset=51')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="has additional fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def links = holder.getNodeValues("//raf:e/raf:TPA_Extensions/raf:AdditionalFares")
assert links.size() == 0
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>XXX</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Single Date Shopping"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Single Date Shopping Sorting" searchProperties="true" id="3f585d36-93c0-4e8e-a716-b752cd612acd"><con:settings/><con:testStep type="httprequest" name="Get Single Date Shop With Ascending Total Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Ascending Total Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Ascending Total Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='PricedItineraries']/*[name()='AirItineraryPricingInfo']/*[name()='ItinTotalFare']/*[name()='TotalFare']/*[name()='Amount']")

for (i = 0; i &lt; fares.size() - 1; ++i) {
  assert fares[i] &lt;= fares[i + 1]	
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>200</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Descending Total Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Descending Total Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Descending Total Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='PricedItineraries']/*[name()='AirItineraryPricingInfo']/*[name()='ItinTotalFare']/*[name()='TotalFare']/*[name()='Amount']")

for (i = 0; i &lt; fares.size() - 1; ++i) {
  assert fares[i] >= fares[i + 1]	
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>dsc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Ascending Departure Time"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Ascending Departure Time" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Ascending Departure Time"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e' and *[name()='DepartureAirport' and *[name()='LocationCode' and text()='ORG']]]/*[name()='DepartureDateTime']")

for (i = 0; i &lt; times.size() - 1; ++i) {
  assert times[i] &lt;= times[i + 1]	
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>200</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Descending Departure Time"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Descending Departure Time" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Descending Departure Time"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e' and *[name()='DepartureAirport' and *[name()='LocationCode' and text()='ORG']]]/*[name()='DepartureDateTime']")

for (i = 0; i &lt; times.size() - 1; ++i) {
  assert times[i] >= times[i + 1]	
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>dsc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Ascending Elapsed Time"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Ascending Elapsed Time" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Ascending Elapsed Time"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e' and *[name()='FlightSegment' and *[name()='e' and *[name()='DepartureAirport' and *[name()='LocationCode' and text()='ORG']]]]]/*[name()='ElapsedTime']")

for (i = 0; i &lt; times.size() - 1; ++i) {
  assert times[i] &lt;= times[i + 1]	
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>elapsedtime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Descending Elapsed Time"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Descending Elapsed Time" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Descending Elapsed Time"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e' and *[name()='FlightSegment' and *[name()='e' and *[name()='DepartureAirport' and *[name()='LocationCode' and text()='ORG']]]]]/*[name()='ElapsedTime']")

for (i = 0; i &lt; times.size() - 1; ++i) {
  assert times[i] >= times[i + 1]	
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>elapsedtime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>dsc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Single Date Shopping Sorting"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Single Date Shopping Filtering" searchProperties="true" id="e3cf81b4-76e9-4029-97cd-d27f9fb50848"><con:settings/><con:testStep type="httprequest" name="Get Single Date Shop With Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='PricedItineraries']/*[name()='AirItineraryPricingInfo']/*[name()='ItinTotalFare']/*[name()='TotalFare']/*[name()='Amount']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 600
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>600</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='PricedItineraries']/*[name()='AirItineraryPricingInfo']/*[name()='ItinTotalFare']/*[name()='TotalFare']/*[name()='Amount']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) &lt;= 600
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>dsc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>600</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Min and Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Min and Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='PricedItineraries']/*[name()='AirItineraryPricingInfo']/*[name()='ItinTotalFare']/*[name()='TotalFare']/*[name()='Amount']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 618 &amp;&amp; Float.valueOf(fares[i]) &lt;= 620
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>618</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>620</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Max Number of Outbound Stops"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Max Number of Outbound Stops" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Stops"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def segments = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][1]/*[name()='FlightSegment']")
def maxStops = 1

for (segment in segments) {
	def counter = 0
	for (childs in segment) {
		if (childs.getNodeName().equals("e")) {
			counter++
		}
	}
	assert (counter - 1) &lt;= maxStops
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundflightstops</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Max Number of Inbound Stops"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Max Number of Inbound Stops" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Stops"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def segments = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][2]/*[name()='FlightSegment']")
def maxStops = 2

for (segment in segments) {
	def counter = 0
	for (childs in segment) {
		if (childs.getNodeName().equals("e")) {
			counter++
		}
	}
	assert (counter - 1) &lt;= maxStops
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundflightstops</con:name><con:value>2</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Max Numbers of Stops"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Max Numbers of Stops" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Outbound Stops"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def segments = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][1]/*[name()='FlightSegment']")
def maxStops = 1

for (segment in segments) {
	def counter = 0
	for (childs in segment) {
		if (childs.getNodeName().equals("e")) {
			counter++
		}
	}
	assert (counter - 1) &lt;= maxStops
}</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Inbound Stops"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def segments = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][2]/*[name()='FlightSegment']")
def maxStops = 2

for (segment in segments) {
	def counter = 0
	for (childs in segment) {
		if (childs.getNodeName().equals("e")) {
			counter++
		}
	}
	assert (counter - 1) &lt;= maxStops
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundflightstops</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundflightstops</con:name><con:value>2</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Online Itineraries Only"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Online Itineraries Only" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Carriers"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def odOptions = holder.getDomNodes("//*[name()='OriginDestinationOption']")

// All odOptions
for (odOption in odOptions) {
	Set&lt;String> carriers = new HashSet&lt;String>()
	// Each odOption consists of two &lt;e> elements
	for (eOdOption in odOption) {	
		for (segments in eOdOption) {			
			// Get outbound and inbound flight segments
			for (segment in segments) {				
				// Iterate over all segments in outbound/inbound
				for (eSegment in segment) {
					if (eSegment.getNodeName().equals("MarketingAirline")) {
						for (carrier in eSegment.getChildNodes()) {
							if (carrier.getLocalName().equals("Code")) {
								for (node in carrier) {
									carriers.add(node.getNodeValue())
								}
							}
						}
					}
				}				
			}			
		}		
	}
	assert carriers.size() == 1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>onlineitinerariesonly</con:name><con:value>y</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Outbound Stop Duration"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Outbound Stop Duration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Stop Duration"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def outOdOptions = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][1]")
def maxDurationTime = 37

// All outbound odOption
for (outOdOption in outOdOptions) {
	def totaltime = 0
	def segmtime = 0
	for (eOutOdOption in outOdOption) {
		if (eOutOdOption.getNodeName().equals("ElapsedTime")) {			
			totaltime = eOutOdOption.getFirstChild().getNodeValue().toInteger()
		}
		for (segments in eOutOdOption) {
			for (segment in segments) {
				if (segment.getNodeName().equals("ElapsedTime")) {
					//log.info "segment ${segment.getFirstChild().getNodeValue()}"
					segmtime += segment.getFirstChild().getNodeValue().toInteger()
				}
			}
		}
	}
	assert (totaltime - segmtime) &lt;= maxDurationTime
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundstopduration</con:name><con:value>37</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Inbound Stop Duration"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Inbound Stop Duration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Stop Duration"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def outOdOptions = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][2]")
def maxDurationTime = 55

// All inbound odOption
for (outOdOption in outOdOptions) {
	def totaltime = 0
	def segmtime = 0
	for (eOutOdOption in outOdOption) {
		if (eOutOdOption.getNodeName().equals("ElapsedTime")) {			
			totaltime = eOutOdOption.getFirstChild().getNodeValue().toInteger()
		}
		for (segments in eOutOdOption) {
			for (segment in segments) {
				if (segment.getNodeName().equals("ElapsedTime")) {
					segmtime += segment.getFirstChild().getNodeValue().toInteger()
				}
			}
		}
	}
	assert (totaltime - segmtime) &lt;= maxDurationTime
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundstopduration</con:name><con:value>55</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Stop Durations"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Stop Durations" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Outbound Stop Duration"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def outOdOptions = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][1]")
def maxDurationTime = 37

// All outbound odOption
for (outOdOption in outOdOptions) {
	def totaltime = 0
	def segmtime = 0
	for (eOutOdOption in outOdOption) {
		if (eOutOdOption.getNodeName().equals("ElapsedTime")) {			
			totaltime = eOutOdOption.getFirstChild().getNodeValue().toInteger()
		}
		for (segments in eOutOdOption) {
			for (segment in segments) {
				if (segment.getNodeName().equals("ElapsedTime")) {
					segmtime += segment.getFirstChild().getNodeValue().toInteger()
				}
			}
		}
	}
	assert (totaltime - segmtime) &lt;= maxDurationTime
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Inbound Stop Duration"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def outOdOptions = holder.getDomNodes("//*[name()='OriginDestinationOption']/*[name()='e'][2]")
def maxDurationTime = 64

// All inbound odOption
for (outOdOption in outOdOptions) {
	def totaltime = 0
	def segmtime = 0
	for (eOutOdOption in outOdOption) {
		if (eOutOdOption.getNodeName().equals("ElapsedTime")) {			
			totaltime = eOutOdOption.getFirstChild().getNodeValue().toInteger()
		}
		for (segments in eOutOdOption) {
			for (segment in segments) {
				if (segment.getNodeName().equals("ElapsedTime")) {
					segmtime += segment.getFirstChild().getNodeValue().toInteger()
				}
			}
		}
	}
	assert (totaltime - segmtime) &lt;= maxDurationTime
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundstopduration</con:name><con:value>37</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundstopduration</con:name><con:value>64</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Outbound Departure Time Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Outbound Departure Time Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Times"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e' and *[name()='DepartureAirport' and *[name()='LocationCode' and text()='ORG']]]/*[name()='DepartureDateTime']")

for (i = 0; i &lt; times.size(); ++i) {
  times[i] = times[i].substring(11)
  assert times[i].compareTo("08:00:00") >= 0 &amp;&amp; times[i].compareTo("09:00:00") &lt;= 0
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outbounddeparturewindow</con:name><con:value>08000900</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Outbound Arrival Time Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Outbound Arrival Time Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Times"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e' and *[name()='ArrivalAirport' and *[name()='LocationCode' and text()='DES']]]/*[name()='ArrivalDateTime']")

for (i = 0; i &lt; times.size(); ++i) {
  times[i] = times[i].substring(11)
  assert times[i].compareTo("14:15:00") >= 0 &amp;&amp; times[i].compareTo("15:15:00") &lt;= 0
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundarrivalwindow</con:name><con:value>14151515</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Inbound Departure Time Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Inbound Departure Time Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Times"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e' and *[name()='DepartureAirport' and *[name()='LocationCode' and text()='DES']]]/*[name()='DepartureDateTime']")

for (i = 0; i &lt; times.size(); ++i) {
  times[i] = times[i].substring(11)
  assert times[i].compareTo("12:00:00") >= 0 &amp;&amp; times[i].compareTo("16:00:00") &lt;= 0
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inbounddeparturewindow</con:name><con:value>12001600</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Inbound Arrival Time Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Inbound Arrival Time Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Times"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def times = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e' and *[name()='ArrivalAirport' and *[name()='LocationCode' and text()='ORG']]]/*[name()='ArrivalDateTime']")

for (i = 0; i &lt; times.size(); ++i) {
  times[i] = times[i].substring(11)
  assert times[i].compareTo("20:00:00") >= 0 &amp;&amp; times[i].compareTo("22:00:00") &lt;= 0
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundarrivalwindow</con:name><con:value>20002200</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Excluded Carriers"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Excluded Carriers" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def codes = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e']/*[name()='MarketingAirline']/*[name()='Code']")

for (i = 0; i &lt; codes.size(); ++i) {
  assert !codes[i].equals("AA")
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>excludedcarriers</con:name><con:value>AA</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Included Carriers"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Included Carriers" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def codes = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e']/*[name()='MarketingAirline']/*[name()='Code']")

for (i = 0; i &lt; codes.size(); ++i) {
  assert codes[i].equals("AA")
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includedcarriers</con:name><con:value>AA</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Included Carriers - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Included Carriers - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def codes = holder.getNodeValues("//*[name()='OriginDestinationOption']/*[name()='e']/*[name()='FlightSegment']/*[name()='e']/*[name()='MarketingAirline']/*[name()='Code']")

for (i = 0; i &lt; codes.size(); ++i) {
  assert codes[i].equals("AA") || codes[i].equals("US")
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includedcarriers</con:name><con:value>US, AA</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With eTickets Only"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With eTickets Only" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate eTickets"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def tickets = holder.getNodeValues("//*[name()='PricedItineraries']/*[name()='e']/*[name()='TicketingInfo']/*[name()='TicketType']")

for (i = 0; i &lt; tickets.size(); ++i) {
  assert tickets[i] == "eTicket"
}</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>eticketsonly</con:name><con:value>y</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Excluded Connect Points"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Excluded Connect Points" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def codes = holder.getNodeValues("//*[name()='DepartureAirport']/*[name()='LocationCode']")

for (i = 0; i &lt; codes.size(); ++i) {
  assert !codes[i].equals("DFW") &amp;&amp; !codes[i].equals("ORD")
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>excludedconnectpoints</con:name><con:value>DFW,ORD</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Excluded Connect Points - lowercase"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Excluded Connect Points - lowercase" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def codes = holder.getNodeValues("//*[name()='DepartureAirport']/*[name()='LocationCode']")

for (i = 0; i &lt; codes.size(); ++i) {
  assert !codes[i].equals("DFW") &amp;&amp; !codes[i].equals("ORD")
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>excludedconnectpoints</con:name><con:value>dfw,ord</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Excluded Connect Points - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Excluded Connect Points - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def codes = holder.getNodeValues("//*[name()='DepartureAirport']/*[name()='LocationCode']")

for (i = 0; i &lt; codes.size(); ++i) {
  assert !codes[i].equals("DFW") &amp;&amp; !codes[i].equals("ORD")
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>   ${#Project#origin}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>   ${#Project#destination}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value> ${#Project#departureDateInstaflights}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>         ${#Project#returnDateInstaflights}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>excludedconnectpoints</con:name><con:value>     DFW    ,     ORD   </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Included Connect Points"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Included Connect Points" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def odOptions = holder.getDomNodes("//*[name()='OriginDestinationOption']")

def org = "ORG";
def des = "DES";
def req = "PHX";

def logs = false;

// All odOptions
for (odOption in odOptions) {
	if (logs) log.info "Itinerary:";
	Set&lt;String> connpoints = new HashSet&lt;String>()
	// Each odOption consists of two &lt;e> elements
	for (eOdOption in odOption) {	
		for (segments in eOdOption) {			
			// Get outbound and inbound flight segments
			for (segment in segments) {				
				// Iterate over all segments in outbound/inbound
				for (eSegment in segment) {
					if (eSegment.getNodeName().equals("DepartureAirport")) {
						for (departure in eSegment.getChildNodes()) {
							if (departure.getLocalName().equals("LocationCode")) {
								for (code in departure) {
									if (code.getNodeValue() != org &amp;&amp; code.getNodeValue() != des) {										
										connpoints.add(code.getNodeValue()); 
										if (logs) log.info "   Connect point: " + code.getNodeValue();					
									}
								}
							}							
						}
					}
				}								
			}					
		}		
	}
	assert connpoints.contains(req);	
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includedconnectpoints</con:name><con:value>PHX</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Included Connect Points - lowercase"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Included Connect Points - lowercase" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Itineraries"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def odOptions = holder.getDomNodes("//*[name()='OriginDestinationOption']")

def org = "ORG";
def des = "DES";
def req = "PHX";

def logs = false;

// All odOptions
for (odOption in odOptions) {
	if (logs) log.info "Itinerary:";
	Set&lt;String> connpoints = new HashSet&lt;String>()
	// Each odOption consists of two &lt;e> elements
	for (eOdOption in odOption) {	
		for (segments in eOdOption) {			
			// Get outbound and inbound flight segments
			for (segment in segments) {				
				// Iterate over all segments in outbound/inbound
				for (eSegment in segment) {
					if (eSegment.getNodeName().equals("DepartureAirport")) {
						for (departure in eSegment.getChildNodes()) {
							if (departure.getLocalName().equals("LocationCode")) {
								for (code in departure) {
									if (code.getNodeValue() != org &amp;&amp; code.getNodeValue() != des) {										
										connpoints.add(code.getNodeValue()); 
										if (logs) log.info "   Connect point: " + code.getNodeValue();					
									}
								}
							}							
						}
					}
				}								
			}					
		}		
	}
	assert connpoints.contains(req);	
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includedconnectpoints</con:name><con:value>phx</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Single Date Shop With Passenger Count"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With Passenger Count" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Seats Remaining"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def seats = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='TPA_Extensions']/*[name()='SeatsRemaining']/*[name()='Number']")

for (i = 0; i &lt; seats.size(); ++i) {
  assert seats[i] >= 4
}</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Itinerary Count"><con:configuration><path>count(//*[name()='AirItinerary'])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDateInstaflights}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>passengercount</con:name><con:value>4</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Single Date Shopping Filtering"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Single Date Shopint - with MAC" searchProperties="true" id="4914bffb-4de8-4340-8203-5b86590ec615">
      <con:settings/>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters fare-depDate [a-a]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters fare-depDate [a-a]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>0</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  fare-depDate [a-d]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  fare-depDate [a-d]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  fare-depDate [d-d]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  fare-depDate [d-d]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  fare-depDate [d-a]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  fare-depDate [d-a]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  depDate-fare [a-a]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  depDate-fare [a-a]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  depDate-fare [a-d]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  depDate-fare [a-d]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  depDate-fare [d-a]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  depDate-fare [d-a]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  depDate-fare [d-d]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  depDate-fare [d-d]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  depDate-elapsed [a-a]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  depDate-elapsed [a-a]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>elapsedtime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  depDate-elapsed [a-d]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  depDate-elapsed [a-d]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>elapsedtime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  elapsed-fare [a-a]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  elapsed-fare [a-a]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>elapsedtime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get Single Date Shop With All Parameters  elapsed-fare [d-a]">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get Single Date Shop With All Parameters  elapsed-fare [d-a]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>50</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>elapsedtime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>200</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="Get more than 300 itineraries">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="Get more than 300 itineraries" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="Validate Self Link">
            <con:configuration>
              <path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'offset=1')</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Validate Link Template Link">
            <con:configuration>
              <path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>&offset=<offset>&limit=<limit>&sortby=<sortby>&order=<order>&sortby2=<sortby2>&order2=<order2>&minfare=<minfare>&maxfare=<maxfare>&includedcarriers=<includedcarriers>&excludedcarriers=<excludedcarriers>&outboundflightstops=<outboundflightstops>&inboundflightstops=<inboundflightstops>&outboundstopduration=<outboundstopduration>&inboundstopduration=<inboundstopduration>&outbounddeparturewindow=<outbounddeparturewindow>&outboundarrivalwindow=<outboundarrivalwindow>&inbounddeparturewindow=<inbounddeparturewindow>&inboundarrivalwindow=<inboundarrivalwindow>&onlineitinerariesonly=<onlineitinerariesonly>&eticketsonly=<eticketsonly>&includedconnectpoints=<includedconnectpoints>&excludedconnectpoints=<excludedconnectpoints>')]]></path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
import com.sabre.soapUi.*
import com.eviware.soapui.SoapUI
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")

def sortby1 =messageExchange.modelItem.getPropertyValue("sortby")
def order1 = messageExchange.modelItem.getPropertyValue("order")

def sortby2 = messageExchange.modelItem.getPropertyValue("sortby2")
def order2 = messageExchange.modelItem.getPropertyValue("order2")

def holder = new DarwinXmlHolder(namespace, messageExchange.responseContentAsXml)

def origins = new com.sabre.soapUi.NodeProvider.Origins().get(holder);
def dests = new com.sabre.soapUi.NodeProvider.Dests().get(holder);
//Assert.setLog(log)
Assert.assertSorted(holder, origins.length, sortby1, order1, sortby2, order2)

assert  2 == new HashSet(Arrays.asList(dests)).size() 
assert 2 == new HashSet(Arrays.asList(origins)).size()</scriptText>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:parameter>
              <con:name>origin</con:name>
              <con:value>CI1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>destination</con:name>
              <con:value>CI2</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>departuredate</con:name>
              <con:value>${#Project#departureDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>returndate</con:name>
              <con:value>${#Project#returnDateInstaflights}</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>offset</con:name>
              <con:value>1</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>limit</con:name>
              <con:value>500</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby</con:name>
              <con:value>totalfare</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order</con:name>
              <con:value>asc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>sortby2</con:name>
              <con:value>departuretime</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>order2</con:name>
              <con:value>dsc</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>minfare</con:name>
              <con:value>0</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
            <con:parameter>
              <con:name>maxfare</con:name>
              <con:value>2000</con:value>
              <con:style>QUERY</con:style>
            </con:parameter>
          <con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Single Date Shopping Errors" searchProperties="true" id="911fb3d4-94a1-4bbe-a818-54d85740cd34"><con:settings/><con:testStep type="httprequest" name="Error - Get Single Date Shop With Missing Origin"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Missing Origin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origin' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Missing Destination"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Missing Destination" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'destination' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Missing Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Missing Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Missing Return Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Missing Return Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Departure Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Departure Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>01/01/1970</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Return Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Return Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>01/02/1970</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Date Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Date Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be before 'returndate'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Offset"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Offset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'offset' must be between 1 and 2147483647"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Limit"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Limit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'limit' must be between 1 and 2147483647"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Parameter Value"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Parameter Value" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'sortby' must be one of '{totalfare,departuretime,elapsedtime}'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>invalid</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Type Mismatch Parameter"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Type Mismatch Parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'offset' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>abc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>FOO</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>BAR</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'minfare' must be greater than or equal to 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Max Fare Less Than Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Max Fare Less Than Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than or equal to 'minfare'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>offset</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value>50</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby</con:name><con:value>totalfare</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>sortby2</con:name><con:value>departuretime</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>order2</con:name><con:value>asc</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>99</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Too Many Values of Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Too Many Values of Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have exactly one value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate},${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Outbound Flight Stops"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Outbound Flight Stops" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'outboundflightstops' must be between 0 and 99"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundflightstops</con:name><con:value>-10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Inbound Flight Stops"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Inbound Flight Stops" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'inboundflightstops' must be between 0 and 99"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundflightstops</con:name><con:value>-10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Type Mismatch Outbound Flight Stops"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Type Mismatch Outbound Flight Stops" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'outboundflightstops' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundflightstops</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Type Mismatch Inbound Flight Stops"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Type Mismatch Inbound Flight Stops" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'inboundflightstops' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundflightstops</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Online Itineraries Only"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Online Itineraries Only" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'onlineitinerariesonly' must contain either a 'y' or 'n' value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>onlineitinerariesonly</con:name><con:value>z</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Type Mismatch Online Itineraries Only"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Type Mismatch Online Itineraries Only" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'onlineitinerariesonly' must contain either a 'y' or 'n' value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>onlineitinerariesonly</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Outbound Stop Duration"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Outbound Stop Duration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'outboundstopduration' must be between 0 and 9999"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundstopduration</con:name><con:value>-10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Negative Inbound Stop Duration"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Negative Inbound Stop Duration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'inboundstopduration' must be between 0 and 9999"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundstopduration</con:name><con:value>-10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Type Mismatch Outbound Stop Duration"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Type Mismatch Outbound Stop Duration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'outboundstopduration' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundstopduration</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Type Mismatch Inbound Stop Duration"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Type Mismatch Inbound Stop Duration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'inboundstopduration' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundstopduration</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Outbound Departure Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Outbound Departure Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'outbounddeparturewindow' must have a format of 'HHmmHHmm' and be a valid time range"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outbounddeparturewindow</con:name><con:value>invalid</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Outbound Arrival Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Outbound Arrival Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'outboundarrivalwindow' must have a format of 'HHmmHHmm' and be a valid time range"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outboundarrivalwindow</con:name><con:value>1234123455</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Inbound Departure Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Inbound Departure Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'inbounddeparturewindow' must have a format of 'HHmmHHmm' and be a valid time range"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inbounddeparturewindow</con:name><con:value>12001260</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Inbound Arrival Window"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Inbound Arrival Window" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'inboundarrivalwindow' must have a format of 'HHmmHHmm' and be a valid time range"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>inboundarrivalwindow</con:name><con:value>2000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Too Many Excluded Carriers" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Too Many Excluded Carriers" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'excludedcarriers' must not have more than 20 elements"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>excludedcarriers</con:name><con:value>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Too Many Included Carriers" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Too Many Included Carriers" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'includedcarriers' must not have more than 20 elements"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includedcarriers</con:name><con:value>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Return Date More Than Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Return Date More Than Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Date range in 'departuredate' and 'returndate' exceeds the maximum allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-18</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid eTickets Only"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid eTickets Only" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'eticketsonly' must contain either a 'y' or 'n' value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>eticketsonly</con:name><con:value>z</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Type Mismatch eTickets Only"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Type Mismatch eTickets Only" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'eticketsonly' must contain either a 'y' or 'n' value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>eticketsonly</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Departure Date Exceeds Limit"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Departure Date Exceeds Limit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(193).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Return Date Exceeds Limit"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Return Date Exceeds Limit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(209).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Too Many Excluded Connect Points"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Too Many Excluded Connect Points" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'excludedconnectpoints' must not have more than 3 elements"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>excludedconnectpoints</con:name><con:value>1,2,3,4</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Too Many Included Connect Points"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Too Many Included Connect Points" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'includedconnectpoints' must not have more than 3 elements"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>includedconnectpoints</con:name><con:value>1,2,3,4</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Not Supported POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Not Supported POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'pointofsalecountry' has an unsupported value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Empty POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Empty POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="sendEmptyParameters">true</con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'pointofsalecountry' must not have an empty value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Single Date Shop With Invalid Passenger Count"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Single Date Shop With Invalid Passenger Count" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'passengercount' must be between 0 and 10"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>passengercount</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - REST BFM Shopping"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REST BFM Shopping" searchProperties="true" id="23487833-c1ea-4510-9e11-6cc4498e836f"><con:settings/><con:testStep type="httprequest" name="REST BFM Shop With Minimum Parameters"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" name="REST BFM Shop With Minimum Parameters" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Sabre-Group" value="E8KE" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights?mode=live</con:endpoint><con:request>{"OTA_AirLowFareSearchRQ":{
      "TravelerInfoSummary":{
         "AirTravelerAvail":[
            {
               "PassengerTypeQuantity":[
                  {
                     "Code":"ADT",
                     "Quantity":1
                  }
               ]
            }
         ]
      },
      "POS":{
         "Source":[
            {
               "RequestorID":{
                  "CompanyName":{
                     "Code":"TN"
                  },
                  "ID":"REQ.ID",
                  "Type":"0.AAA.X"
               }
            }
         ]
      },
      "TPA_Extensions":{
         "IntelliSellTransaction":{
            "RequestType":{
               "Name":"DARWIN300ITINS"
            }
         }
      },
      "OriginDestinationInformation":[
         {
            "DepartureDateTime":{
               "content":"${#Project#departureDateInstaflights}T00:00:00"
            },
            "DestinationLocation":{
               "LocationCode":"ATL"
            },
            "OriginLocation":{
               "LocationCode":"DFW"
            },
            "RPH":1
         },
         {
            "DepartureDateTime":{
               "content":"${#Project#returnDateInstaflights}T00:00:00"
            },
            "DestinationLocation":{
               "LocationCode":"DFW"
            },
            "OriginLocation":{
               "LocationCode":"ATL"
            },
            "RPH":2
         }
      ]
   }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/&lt;version>/shop/flights?mode=&lt;mode>')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'mode=live')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="REST BFM Shop v1.8.1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" name="REST BFM Shop v1.8.1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Sabre-Group" value="E8KE" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1.8.1/shop/flights?mode=live</con:endpoint><con:request>{"OTA_AirLowFareSearchRQ":{
      "TravelerInfoSummary":{
         "AirTravelerAvail":[
            {
               "PassengerTypeQuantity":[
                  {
                     "Code":"ADT",
                     "Quantity":1
                  }
               ]
            }
         ]
      },
      "POS":{
         "Source":[
            {
               "RequestorID":{
                  "CompanyName":{
                     "Code":"TN"
                  },
                  "ID":"REQ.ID",
                  "Type":"0.AAA.X"
               }
            }
         ]
      },
      "TPA_Extensions":{
         "IntelliSellTransaction":{
            "RequestType":{
               "Name":"DARWIN300ITINS"
            }
         }
      },
      "OriginDestinationInformation":[
         {
            "DepartureDateTime":"${#Project#departureDateInstaflights}T00:00:00",
            "DestinationLocation":{
               "LocationCode":"ATL"
            },
            "OriginLocation":{
               "LocationCode":"DFW"
            },
            "RPH":1
         },
         {
            "DepartureDateTime":"${#Project#returnDateInstaflights}T00:00:00",
            "DestinationLocation":{
               "LocationCode":"DFW"
            },
            "OriginLocation":{
               "LocationCode":"ATL"
            },
            "RPH":2
         }
      ]
   }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/&lt;version>/shop/flights?mode=&lt;mode>')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'mode=live')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="REST BFM Alt Dates Shop v1.8.1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" name="REST BFM Alt Dates Shop v1.8.1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Sabre-Group" value="E8KE" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1.8.1/shop/altdates/flights?mode=live</con:endpoint><con:request>{"OTA_AirLowFareSearchRQ":{
      "TravelerInfoSummary":{
         "AirTravelerAvail":[
            {
               "PassengerTypeQuantity":[
                  {
                     "Code":"ADT",
                     "Quantity":1
                  }
               ]
            }
         ]
      },
      "POS":{
         "Source":[
            {
               "RequestorID":{
                  "CompanyName":{
                     "Code":"TN"
                  },
                  "ID":"REQ.ID",
                  "Type":"0.AAA.X"
               }
            }
         ]
      },
      "TPA_Extensions":{
         "IntelliSellTransaction":{
            "RequestType":{
               "Name":"AD1"
            }
         }
      },
      "OriginDestinationInformation":[
         {
            "DepartureDateTime":"${#Project#departureDateInstaflights}T00:00:00",
            "DestinationLocation":{
               "LocationCode":"ATL"
            },
            "OriginLocation":{
               "LocationCode":"DFW"
            },
            "RPH":1
         },
         {
            "DepartureDateTime":"${#Project#returnDateInstaflights}T00:00:00",
            "DestinationLocation":{
               "LocationCode":"DFW"
            },
            "OriginLocation":{
               "LocationCode":"ATL"
            },
            "RPH":2
         }
      ]
   }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/&lt;version>/shop/altdates/flights?mode=&lt;mode>')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'mode=live')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="REST BFM Shopping Errors" searchProperties="true" id="3c94e4cd-25bd-4a77-9737-43af541f37aa"><con:settings/><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Extended Calendar Shopping"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Extended Calendar Shopping" searchProperties="true" id="07998120-88c3-4c2c-b41c-0a2424622818"><con:settings/><con:testStep type="httprequest" name="Extended Calendar Shop v1.8.1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" name="Extended Calendar Shop v1.8.1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Sabre-Group" value="E8KE" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1.8.1/shop/calendar/flights</con:endpoint><con:request>{"OTA_AirLowFareSearchRQ":{
      "TravelerInfoSummary":{
         "AirTravelerAvail":[
            {
               "PassengerTypeQuantity":[
                  {
                     "Code":"ADT",
                     "Quantity":1
                  }
               ]
            }
         ]
      },
      "POS":{
         "Source":[
            {
               "RequestorID":{
                  "CompanyName":{
                     "Code":"TN"
                  },
                  "ID":"REQ.ID",
                  "Type":"0.AAA.X"
               }
            }
         ]
      },
      "TPA_Extensions":{
         "IntelliSellTransaction":{
            "RequestType":{
               "Name":"DARWIN300ITINS"
            }
         }
      },
      "OriginDestinationInformation":[
         {
            "DepartureDateTime":"${#Project#departureDateInstaflights}T00:00:00",
            "DestinationLocation":{
               "LocationCode":"ATL"
            },
            "OriginLocation":{
               "LocationCode":"DFW"
            },
            "RPH":1
         },
         {
            "DepartureDateTime":"${#Project#returnDateInstaflights}T00:00:00",
            "DestinationLocation":{
               "LocationCode":"DFW"
            },
            "OriginLocation":{
               "LocationCode":"ATL"
            },
            "RPH":2
         }
      ]
   }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/&lt;version>/shop/calendar/flights?mode=&lt;mode>')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '/shop/calendar/flights')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Future Date Lead Fare Shopping"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Future Date Lead Fare Shopping" searchProperties="true" id="c609dd29-e613-41bd-b960-2fd0064d6889"><con:settings/><con:testStep type="httprequest" name="Get Lead Fare Shop With All Parameters"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With All Parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo Currency Code"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo Departure Date"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='DepartureDateTime']</path><content>${=new Date().format("yyyy-MM-dd'T00:00:00'")}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo Return Date"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='ReturnDateTime']</path><content>${=new Date().plus(10).format("yyyy-MM-dd'T00:00:00'")}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo Lowest Fare"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare'] > 100</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With All Parameters - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With All Parameters - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo Currency Code"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo Departure Date"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='DepartureDateTime']</path><content>${=new Date().format("yyyy-MM-dd'T00:00:00'")}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo Return Date"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='ReturnDateTime']</path><content>${=new Date().plus(10).format("yyyy-MM-dd'T00:00:00'")}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo Lowest Fare"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare'] > 100</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=%20%2010%20')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>     ${#Project#origin}       </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>  ${#Project#destination}      </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>  10 </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>    0     </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value> 1000    </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Minimum Parameters"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Minimum Parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Multi Values of Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Multi Values of Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Lenght of Stay"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def departuredatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='DepartureDateTime']")
def returndatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='ReturnDateTime']")
def los1 = 3
def los2 = 7
def los3 = 10

for (i = 0; i &lt; departuredatetimes.size() - 1; ++i) {
	def dep = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", departuredatetimes[i])
	def ret = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", returndatetimes[i])
	def dep1 = dep.plus(los1)
	def dep2 = dep.plus(los2)
	def dep3 = dep.plus(los3)
	assert (dep1.compareTo(ret) == 0 || dep2.compareTo(ret) == 0 || dep3.compareTo(ret) == 0)
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10,3,7</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Multi Values of Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Multi Values of Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Lenght of Stay"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def departuredatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='DepartureDateTime']")
def returndatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='ReturnDateTime']")
def los = 10

for (i = 0; i &lt; departuredatetimes.size() - 1; ++i) {
	def dep = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", departuredatetimes[i])
	def ret = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", returndatetimes[i])
	dep = dep.plus(los)
	assert dep.compareTo(ret) == 0
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departuredate},${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Sets of Lenght Of Stay and Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Sets of Lenght Of Stay and Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Lenght of Stay"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def departuredatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='DepartureDateTime']")
def returndatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='ReturnDateTime']")
def los1 = 7
def los2 = 10

for (i = 0; i &lt; departuredatetimes.size() - 1; ++i) {
	def dep = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", departuredatetimes[i])
	def ret = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", returndatetimes[i])
	def dep1 = dep.plus(los1)
	def dep2 = dep.plus(los2)
	assert (dep1.compareTo(ret) == 0 || dep2.compareTo(ret) == 0)
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10,7</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departuredate},${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Sets of Lenght Of Stay and Departure Date - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Sets of Lenght Of Stay and Departure Date - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=%2010%20%2C%207%20')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Lenght of Stay"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def departuredatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='DepartureDateTime']")
def returndatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='ReturnDateTime']")
def los1 = 7
def los2 = 10

for (i = 0; i &lt; departuredatetimes.size() - 1; ++i) {
	def dep = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", departuredatetimes[i])
	def ret = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", returndatetimes[i])
	def dep1 = dep.plus(los1)
	def dep2 = dep.plus(los2)
	assert (dep1.compareTo(ret) == 0 || dep2.compareTo(ret) == 0)
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>    ${#Project#origin}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value> ${#Project#destination}  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value> 10 , 7 </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>    ${#Project#departuredate}  ,  ${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}  </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;pointofsalecountry=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Shop link has POS"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def links = holder.getNodeValues("//raf:FareInfo/raf:e/raf:Links/raf:e[1]/raf:href")


for(link in links){
	assert link.contains('pointofsalecountry=DE')
}

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Multi Values of Length Of Stay (extended)"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Multi Values of Length Of Stay (extended)" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Lenght of Stay"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def departuredatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='DepartureDateTime']")
def returndatetimes = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='ReturnDateTime']")

def loss = messageExchange.modelItem.testStep.getPropertyValue( "lengthofstay" )
def loses = loss.split(",")
for (i = 0; i &lt; departuredatetimes.size() - 1; ++i) {
	def dep = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", departuredatetimes[i])
	def ret = new Date().parse("yyyy-MM-dd'T'HH:mm:ss", returndatetimes[i])
	returnIsDeparturePlusLOS = false
	for( currLos in loses){
		def newDate = dep.plus(java.lang.Integer.parseInt(currLos))
		if(newDate.compareTo(ret) == 0){
			returnIsDeparturePlusLOS = true
			return
		}
	}
	assert returnIsDeparturePlusLOS
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1,2,3,4,5,6,7,8,9,10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departuredate},${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Minimum Parameters MAC-MAC"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Minimum Parameters MAC-MAC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>CI1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>CI2</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Minimum Parameters MAC-Airport"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Minimum Parameters MAC-Airport" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>CI1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Lead Fare Shop With Minimum Parameters MAC-MAC - na"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Lead Fare Shop With Minimum Parameters MAC-MAC - na" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;lengthofstay=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&destination=<destination>&lengthofstay=<lengthofstay>&departuredate=<departuredate>&minfare=<minfare>&maxfare=<maxfare>&pointofsalecountry=<pointofsalecountry>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>CI1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>CI2</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>9</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Future Date Lead Fare Shopping"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Future Date Lead Fare Shopping Filtering" searchProperties="true" id="46bb95e1-f92f-4334-87c4-e76f6e687832"><con:settings/><con:testStep type="httprequest" name="Get Lead Fare Shop With Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 400
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>minfare</con:name><con:value>400</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) &lt;= 450
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>450</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Min and Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Min and Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 400 &amp;&amp; Float.valueOf(fares[i]) &lt;= 450
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>minfare</con:name><con:value>400</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>450</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Future Date Lead Fare Shopping Filtering"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Future Date Lead Fare Shopping Errors" searchProperties="true" id="08891793-4d58-4941-b2fa-94f8d01d28d1"><con:settings/><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Missing Origin"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Missing Origin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origin' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Missing Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Missing Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be between 0 and 16"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>366</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Type Mismatch Parameter"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Type Mismatch Parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>FOO</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>BAR</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Negative Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Negative Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'minfare' must be greater than or equal to 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Negative Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Negative Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Max Fare Less Than Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Max Fare Less Than Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than or equal to 'minfare'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>99</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Missing Value in Set of Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Missing Value in Set of Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10,,7</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value in Set of Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value in Set of Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be between 0 and 16"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10,366,2</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Type Mismatch Parameter in Set of Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Type Mismatch Parameter in Set of Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10,foo,12</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value of Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value of Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>invalid</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Missing Value in Set of Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Missing Value in Set of Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate},,${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value in Set of Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Invalid Parameter Value in Set of Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate},2014/02/23</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Date Over The Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Date Over The Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#dateOverTheRange}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Not Supported POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Not Supported POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'pointofsalecountry' has an unsupported value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Empty POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Empty POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="sendEmptyParameters">true</con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'pointofsalecountry' must not have an empty value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>10</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Lead Fare Shop With Too Many Values for Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Lead Fare Shop With Too Many Values for Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must not have more than 5 elements"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1,2,3,4,5,6</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Too Many Values for Length Of Stay (extended)"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Too Many Values for Length Of Stay (extended)" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must not have more than 10 elements"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1,2,3,4,5,6,7,8,9,10,11</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departuredate},${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Destination Lead Fare Shopping"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Destination Lead Fare Shopping" searchProperties="true" id="456b0c33-2c6e-48e8-acb4-5af1e9795153"><con:settings/><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With All Parameters"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With All Parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;location=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>theme</con:name><con:value>BEACH</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>minfare</con:name><con:value>0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With All Parameters - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With All Parameters - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;location=%20US%20%20')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>   ${#Project#origin}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>  ${#Project#departureDate}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value> ${#Project#returnDate}    </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value> US  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>theme</con:name><con:value> BEACH   </con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>minfare</con:name><con:value>      0              </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>            1000           </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Minimum Parameters"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Minimum Parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has usage note"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/shop/flights/fares';
count(//raf:UsageNote)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Length Of Stay and Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Length Of Stay and Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Theme"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='Theme']</path><content>BEACH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>BEACH</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Length Of Stay and Departure Dates w/o usage note"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Length Of Stay and Departure Dates w/o usage note" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="not have usage note"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/shop/flights/fares';
count(//raf:UsageNote)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(9).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Length Of Stay and Departure Dates w/ usage note"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Length Of Stay and Departure Dates w/ usage note" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="have usage note"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/shop/flights/fares';
count(//raf:UsageNote)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(11).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Length Of Stay, Departure Dates and Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Length Of Stay, Departure Dates and Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Theme"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='Theme']</path><content>BEACH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>BEACH</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With All Parameters and Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With All Parameters and Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Theme"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='Theme']</path><content>BEACH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>BEACH</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With All Parameters and Length Of Stay - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With All Parameters and Length Of Stay - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Theme"><con:configuration><path>//*[name()='FareInfo']/*[name()='e']/*[name()='Theme']</path><content>BEACH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>   ${#Project#origin}     </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>  1  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>  ${#Project#departureDate} </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value> ${#Project#returnDate}    </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>    BEACH   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value> 0   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>    1000  </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Location - PL"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Location - PL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;location=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>theme</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>minfare</con:name><con:value>0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;pointofsalecountry=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="shop link has POS"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def links = holder.getNodeValues("//raf:FareInfo/raf:e/raf:Links/raf:e[1]/raf:href")


for(link in links){
	assert link.contains('pointofsalecountry=DE')
}

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Length Of Stay and POS Country"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Length Of Stay and POS Country" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;pointofsalecountry=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has usage note"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/shop/flights/fares';
count(//raf:UsageNote)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="shop link has POS"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def links = holder.getNodeValues("//raf:FareInfo/raf:e/raf:Links/raf:e[1]/raf:href")


for(link in links){
	assert link.contains('pointofsalecountry=DE')
}

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>${#Project#pointofsalecountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Region"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Region" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;pointofsalecountry=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has usage note"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/shop/flights/fares';
count(//raf:UsageNote)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Result count"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e")

assert codes.size() == 4

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Latin Region"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Region[.='Latin America']]/raf:DestinationLocation")

assert codes.size() == 1
assert codes[0].equals("MEX");
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Europe Region"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Region[.='Europe']]/raf:DestinationLocation")

assert codes.size() == 3
assert codes[0].equals("FRA");
assert codes[1].equals("LHR");
assert codes[2].equals("MUC");


</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#secondorigin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>region</con:name><con:value>Europe</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>region</con:name><con:value>Latin America</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Destination Lead Fare Shop With Region and countries"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Destination Lead Fare Shop With Region and countries" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;pointofsalecountry=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has usage note"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/shop/flights/fares';
count(//raf:UsageNote)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Result count"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e")

assert codes.size() == 4

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Latin Region"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Region[.='Latin America']]/raf:DestinationLocation")

assert codes.size() == 1
assert codes[0].equals("MEX");
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Europe Region"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Region[.='Europe']]/raf:DestinationLocation")

assert codes.size() == 3
assert codes[0].equals("FRA");
assert codes[1].equals("LHR");
assert codes[2].equals("MUC");


</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="DE location"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Location[.='DE']]/raf:DestinationLocation")

assert codes.size() == 2
assert codes[0].equals("FRA");
assert codes[1].equals("MUC");
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#secondorigin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>region</con:name><con:value>Europe</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>region</con:name><con:value>Latin America</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>DE</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Destination Lead Fare Shop With Region and country and theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Destination Lead Fare Shop With Region and country and theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;pointofsalecountry=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has usage note"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/shop/flights/fares';
count(//raf:UsageNote)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Result count"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e")

assert codes.size() == 2

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="North America"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Region[.='North America']]/raf:DestinationLocation")

assert codes.size() == 2
assert codes[0].equals("FLL");
assert codes[1].equals("OGG");

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="US"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Location[.='US']]/raf:DestinationLocation")

assert codes.size() == 2
assert codes[0].equals("FLL");
assert codes[1].equals("OGG");

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Beach"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e[raf:Theme[.='BEACH']]/raf:DestinationLocation")

assert codes.size() == 2
assert codes[0].equals("FLL");
assert codes[1].equals("OGG");

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#secondorigin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>region</con:name><con:value>North America</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>beach</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop MAC"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop MAC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationLocation")
def lowestFare = holder.getNodeValues("//raf:FareInfo/raf:e/raf:LowestFare")
def lowestNonStopFare = holder.getNodeValues("//raf:FareInfo/raf:e/raf:LowestNonStopFare")


assert codes.size() == 4
assert codes[0].equals("DE1");
assert lowestFare[0].equals("666.12");
assert lowestNonStopFare[0].equals("666.12");

assert codes[1].equals("DE2");
assert lowestFare[1].equals("777.13");
assert lowestNonStopFare[1].equals("777.13");


assert codes[2].equals("DE3");
assert lowestFare[2].equals("398.6");
assert lowestNonStopFare[2].equals("N/A");


assert codes[3].equals("DE4");
assert lowestFare[3].equals("398.6");
assert lowestNonStopFare[3].equals("N/A");



</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>CI1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop MAC - na"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop MAC - na" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationLocation")
def lowestFare = holder.getNodeValues("//raf:FareInfo/raf:e/raf:LowestFare")
def lowestNonStopFare = holder.getNodeValues("//raf:FareInfo/raf:e/raf:LowestNonStopFare")


assert codes.size() == 4
assert codes[0].equals("DE1");
assert lowestFare[0].equals("1000.12");
assert lowestNonStopFare[0].equals("1000.12");

assert codes[1].equals("DE2");
assert lowestFare[1].equals("777.13");
assert lowestNonStopFare[1].equals("777.13");


assert codes[2].equals("DE3");
assert lowestFare[2].equals("398.6");
assert lowestNonStopFare[2].equals("N/A");


assert codes[3].equals("DE4");
assert lowestFare[3].equals("398.6");
assert lowestNonStopFare[3].equals("N/A");



</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>CI1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#secondReturnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop Top"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop Top" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationLocation")
def ranks = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationRank")



assert codes.size() == 3
assert codes[0].equals("DES");
assert ranks[0].equals("1");


assert codes[1].equals("KRK");
assert ranks[1].equals("2");


assert codes[2].equals("MUC");
assert ranks[2].equals("3");






</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>topdestinations</con:name><con:value>3</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop Top - only one"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop Top - only one" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationLocation")
def ranks = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationRank")



assert codes.size() == 1
assert codes[0].equals("DES");
assert ranks[0].equals("1");








</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>topdestinations</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop Top - only one, with location"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop Top - only one, with location" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=<theme>&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationLocation")
def ranks = holder.getNodeValues("//raf:FareInfo/raf:e/raf:DestinationRank")
def locations = holder.getNodeValues("//raf:FareInfo/raf:e/raf:Location")



assert codes.size() == 1



assert codes[0].equals("MUC");
assert ranks[0].equals("1");
assert locations[0].equals("DE");






</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>topdestinations</con:name><con:value>3</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>DE</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop Top - origin w/o top destination"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop Top - origin w/o top destination" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#secondorigin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>topdestinations</con:name><con:value>3</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>DE</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Destination Lead Fare Shopping"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Destination Lead Fare Shopping Errors" searchProperties="true" id="f730b49c-d683-4382-970c-a0558aafc763"><con:settings/><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Missing Origin"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Missing Origin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origin' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>United States</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Missing Return Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Missing Return Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Departure Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Departure Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>01/01/1970</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Return Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Return Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>01/02/1970</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Date Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Date Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be before 'returndate'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'theme' must be one of '{BEACH,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value/><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>FOO</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>FOO</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Negative Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Negative Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'minfare' must be greater than or equal to 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Negative Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Negative Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Max Fare Less Than Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Max Fare Less Than Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than or equal to 'minfare'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>99</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Too Many Values of Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Too Many Values of Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have exactly one value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>${#Project#departureDate},${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Departure Date Over The Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Departure Date Over The Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#dateOverTheRange}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Return Date Over The Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Return Date Over The Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(209).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Missing Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Missing Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Negative Lenth Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Negative Lenth Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be between 0 and 16"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Type Mismatch Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Type Mismatch Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Too Many Values of Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Too Many Values of Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must have exactly one value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1,2,3</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Earliest Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Earliest Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>2014/04/04</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Text Value of Earliest Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Text Value of Earliest Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Earliest Departure Date Over The Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Earliest Departure Date Over The Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#dateOverTheRange}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Missing Value of Latest Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Missing Value of Latest Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'latestdeparturedate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Latest Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Latest Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'latestdeparturedate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>2014-02-31</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Text Value of Latest Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Text Value of Latest Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'latestdeparturedate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Latest Departure Date Over The Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Latest Departure Date Over The Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'latestdeparturedate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#dateOverTheRange}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Date Range for Earliest and Latest Departures"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Date Range for Earliest and Latest Departures" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' must be before 'latestdeparturedate'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With  Date Range Too Wide"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With  Date Range Too Wide" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>Date range in 'earliestdeparturedate' and 'latestdeparturedate' exceeds the maximum allowed</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(31).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Location"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Location" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>One of the 'location' has an unsupported or invalid value 'XX'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>XX</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>Beach</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Invalid Location and Theme Mix"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Invalid Location and Theme Mix" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>DE</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>BEACH</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Invalid Location DE pos"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Invalid Location DE pos" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>One of the 'location' has an unsupported or invalid value 'XX'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>XX</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value/><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>DE</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Return Date and Without Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Return Date and Without Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Return Date and Length Of Stay and Without Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Return Date and Length Of Stay and Without Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Return Date More Than Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Return Date More Than Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Date range in 'departuredate' and 'returndate' exceeds the maximum allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-18</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Not Supported POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Not Supported POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>Parameter 'pointofsalecountry' has an unsupported value</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>Beach</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destination Lead Fare Shop With Empty POS Country Code"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Lead Fare Shop With Empty POS Country Code" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="sendEmptyParameters">true</con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>Parameter 'pointofsalecountry' must not have an empty value</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>pointofsalecountry</con:name><con:value/><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>Beach</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop With Invalid region"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop With Invalid region" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>One of the 'region' has an unsupported or invalid value 'Atlantida'. Valid region names: [Africa, Asia Pacific, Europe, Latin America, Middle East, North America]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value/><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>region</con:name><con:value>Atlantida</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop too small top dests"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop too small top dests" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>Parameter 'topDestinations' must be between 1 and 50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>topdestinations</con:name><con:value>0</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Lead Fare Shop too big top dests"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Lead Fare Shop too big top dests" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message']</path><content>Parameter 'topDestinations' must be between 1 and 50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>topdestinations</con:name><con:value>51</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Destination Lead Fare Shopping Filtering" searchProperties="true" id="25dc84a8-791c-4b70-95f7-e67a8b021493"><con:settings/><con:testStep type="httprequest" name="Get Lead Fare Shop With Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 200
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>minfare</con:name><con:value>200</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) &lt;= 400
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>maxfare</con:name><con:value>400</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Lead Fare Shop With Min and Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Lead Fare Shop With Min and Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 200 &amp;&amp; Float.valueOf(fares[i]) &lt;= 400
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>minfare</con:name><con:value>200</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>maxfare</con:name><con:value>400</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Destination Lead Fare Shopping Filtering"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Fare Forecasting"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Fare Forecasting" searchProperties="true" id="b89b6c58-b1db-4a1e-88e6-1d6705c11297"><con:settings/><con:testStep type="httprequest" name="Get Fare Forecast"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Fare Forecast" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Recommendation"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Recommendation</path><content>buy</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/forecast/flights/fares?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/forecast/flights/fares?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Highest Predicted Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:HighestPredictedFare</path><content>991</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Lowest Predicted Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:LowestPredictedFare</path><content>680</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Currency Code"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:CurrencyCode</path><content>USD</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Return Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:ReturnDateTime</path><content>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Departure Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:DepartureDateTime</path><content>${#Project#departureDate}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Lowest Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:LowestFare</path><content>443.6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:DestinationLocation</path><content>${#Project#destination}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:OriginLocation</path><content>${#Project#origin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Fare Forecast - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Fare Forecast - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Recommendation"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Recommendation</path><content>buy</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/forecast/flights/fares?origin=%20%20%20${#Project#origin}%20%20&amp;destination=%20%20${#Project#destination}%20%20%20%20&amp;departuredate=%20${#Project#departureDate}%20&amp;returndate=%20%20%20${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}%20</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/forecast/flights/fares?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Highest Predicted Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:HighestPredictedFare</path><content>991</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Lowest Predicted Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:LowestPredictedFare</path><content>680</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Currency Code"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:CurrencyCode</path><content>USD</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Return Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:ReturnDateTime</path><content>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Departure Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:DepartureDateTime</path><content>${#Project#departureDate}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Lowest Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:LowestFare</path><content>443.6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:DestinationLocation</path><content>${#Project#destination}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:OriginLocation</path><content>${#Project#origin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>   ${#Project#origin}  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>  ${#Project#destination}    </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value> ${#Project#departureDate} </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>   ${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(10).format('yyyy-MM-dd')} </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Fare Forecast - na"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Fare Forecast - na" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Recommendation"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Recommendation</path><content>unknown</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/forecast/flights/fares?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(9).format('yyyy-MM-dd')}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/forecast/flights/fares?origin=<origin>&destination=<destination>&departuredate=<departuredate>&returndate=<returndate>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Highest Predicted Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:HighestPredictedFare</path><content>991</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Lowest Predicted Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:LowestPredictedFare</path><content>680</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Currency Code"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:CurrencyCode</path><content>USD</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Return Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:ReturnDateTime</path><content>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(9).format('yyyy-MM-dd')}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Departure Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:DepartureDateTime</path><content>${#Project#departureDate}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Lowest Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:LowestFare</path><content>N/A</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:DestinationLocation</path><content>${#Project#destination}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/forecast/flights/fares'
//ns:OriginLocation</path><content>${#Project#origin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(9).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Fare Forecasting Errors" searchProperties="true" id="a48fbd4b-aa70-4ae7-a95e-6bcba2c5c8b7"><con:settings/><con:testStep type="httprequest" name="Error - Get Fare Forecast With Missing Origin"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Missing Origin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origin' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Missing Destination"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Missing Destination" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'destination' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Missing Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Missing Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Missing Return Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Missing Return Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Invalid Departure Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Invalid Departure Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>01/01/1970</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Invalid Return Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Invalid Return Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>01/02/1970</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Invalid Date Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Invalid Date Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be before 'returndate'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>FOO</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>BAR</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Too Many Values of Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Too Many Values of Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have exactly one value"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate},${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(7).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Departure Date Exceeds Limit"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Departure Date Exceeds Limit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(193).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Fare Forecast With Return Date Exceeds Limit"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Fare Forecast With Return Date Exceeds Limit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/forecast/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(193).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Destination Seasonality"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Destination Seasonality" searchProperties="true" id="a9e5840a-cc08-41ad-817c-bff7d842ed04"><con:settings/><con:testStep type="httprequest" name="Get Destination Seasonality"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Seasonality" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/${#Project#destination}/seasonality</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destination}/seasonality'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/historical/flights/${#Project#destination}/seasonality</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destination}/seasonality'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content>${#Project#baseUrl}/v1/historical/flights/&lt;destination>/seasonality</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destination}/seasonality'
//ns:DestinationLocation</path><content>${#Project#destination}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Seasonality Count"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destination}/seasonality'
count(//ns:Seasonality/ns:e)</path><content>52</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Seasonality Week 1"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destination}/seasonality'
count(//ns:Seasonality/ns:e[ns:YearWeekNumber="1"  and ns:WeekStartDate="2013-12-30" and ns:WeekEndDate="2014-01-05" and ns:SeasonalityIndicator="Low"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Get Destination Seasonality - lowercase"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destination Seasonality - lowercase" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/${#Project#destinationLowercase}/seasonality</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destinationLowercase}/seasonality'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/historical/flights/${#Project#destinationLowercase}/seasonality</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destinationLowercase}/seasonality'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content>${#Project#baseUrl}/v1/historical/flights/&lt;destination>/seasonality</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destinationLowercase}/seasonality'
//ns:DestinationLocation</path><content>${#Project#destination}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Seasonality Count"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destinationLowercase}/seasonality'
count(//ns:Seasonality/ns:e)</path><content>52</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Seasonality Week 1"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/${#Project#destinationLowercase}/seasonality'
count(//ns:Seasonality/ns:e[ns:YearWeekNumber="1"  and ns:WeekStartDate="2013-12-30" and ns:WeekEndDate="2014-01-05" and ns:SeasonalityIndicator="Low"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Destination Seasonality Errors" searchProperties="true" id="e090ce80-190c-46ff-9679-bbd0e98d9ca4"><con:settings/><con:testStep type="httprequest" name="Error - Get Destination Seasonality With No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destination Seasonality With No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/FOO/seasonality</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Average Ticket"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Average Ticket" searchProperties="true" id="c9a7dbfd-87e9-4112-858b-e39dd7130341"><con:settings/><con:testStep type="httprequest" name="Get Average Ticket"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Average Ticket" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Count"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:Count</path><content>Low</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/historical/flights/fares?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;earliestdeparturedate=${#Project#departureDate}&amp;latestdeparturedate=${#Project#returnDate}&amp;lengthofstay=1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/historical/flights/fares?origin=<origin>&destination=<destination>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&lengthofstay=<lengthofstay>&excludelcc=<excludelcc>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Maximum Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:MaximumFare</path><content>925.08</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Minimum Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:MinimumFare</path><content>489.25</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Currency Code"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:CurrencyCode</path><content>USD</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Return Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:ReturnDateTime</path><content>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Departure Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:DepartureDateTime</path><content>${#Project#departureDate}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Median Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:MedianFare</path><content>671.24</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:DestinationLocation</path><content>${#Project#destination}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:OriginLocation</path><content>${#Project#origin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Forecast Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='forecast']/ns:href</path><content>${#Project#baseUrl}/v1/forecast/flights/fares?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Average Ticket MAC-MAC"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Average Ticket MAC-MAC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate count"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:Count</path><content>Low</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate DE1 max"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e[ns:DestinationLocation='DE1']/ns:MaximumFare</path><content>825.08</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate DE1 origin"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e[ns:DestinationLocation='DE1']/ns:OriginLocation</path><content>OR1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate number of pairs"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
count(//ns:FareData/ns:e)</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link OR1DE1"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e[ns:DestinationLocation='DE1' and ns:OriginLocation='OR1']/ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=OR1&amp;destination=DE1&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link OR2DE1"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e[ns:DestinationLocation='DE1' and ns:OriginLocation='OR2']/ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=OR2&amp;destination=DE1&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link OR1DE2"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e[ns:DestinationLocation='DE2' and ns:OriginLocation='OR1']/ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=OR1&amp;destination=DE2&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link OR2DE2"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e[ns:DestinationLocation='DE2' and ns:OriginLocation='OR2']/ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=OR2&amp;destination=DE2&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Currency Code"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:CurrencyCode</path><content>USD</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Return Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:ReturnDateTime</path><content>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Departure Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:DepartureDateTime</path><content>${#Project#departureDate}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>CI1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>CI2</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Average Ticket IATA-MAC"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Average Ticket IATA-MAC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:Count</path><content>Low</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate number of pairs"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
count(//ns:FareData/ns:e)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>OR1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>CI2</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Average Ticket MAC-IATA"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Average Ticket MAC-IATA" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:Count</path><content>Low</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate number of pairs"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
count(//ns:FareData/ns:e)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>CI1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>DE1</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Average Ticket - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Average Ticket - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Count"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:Count</path><content>Low</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Shop Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='shop']/ns:href</path><content>${#Project#baseUrl}/v1/shop/flights?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}&amp;pointofsalecountry=US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/historical/flights/fares?origin=%20%20%20%20${#Project#origin}%20&amp;destination=%20${#Project#destination}%20%20&amp;earliestdeparturedate=%20%20${#Project#departureDate}%20%20%20&amp;latestdeparturedate=%20%20${#Project#returnDate}%20%20%20%20&amp;lengthofstay=%201%20</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/historical/flights/fares?origin=<origin>&destination=<destination>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&lengthofstay=<lengthofstay>&excludelcc=<excludelcc>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Maximum Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:MaximumFare</path><content>925.08</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Minimum Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:MinimumFare</path><content>489.25</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Currency Code"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:CurrencyCode</path><content>USD</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Return Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:ReturnDateTime</path><content>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Departure Date/Time"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:DepartureDateTime</path><content>${#Project#departureDate}T00:00:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Median Fare"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:FareData/ns:e/ns:MedianFare</path><content>671.24</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:DestinationLocation</path><content>${#Project#destination}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:OriginLocation</path><content>${#Project#origin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Forecast Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/historical/flights/fares'
//ns:Links/ns:e[ns:rel='forecast']/ns:href</path><content>${#Project#baseUrl}/v1/forecast/flights/fares?origin=${#Project#origin}&amp;destination=${#Project#destination}&amp;departuredate=${#Project#departureDate}&amp;returndate=${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(1).format('yyyy-MM-dd')}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>    ${#Project#origin} </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value> ${#Project#destination}  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>  ${#Project#departureDate}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>  ${#Project#returnDate}    </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value> 1 </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Average Ticket Errors" searchProperties="true" id="7dd7df42-280f-47a2-bab9-c8f836af475a"><con:settings/><con:testStep type="httprequest" name="Error - Get Average Ticket With Missing Origin"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Missing Origin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origin' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Missing Destination"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Missing Destination" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'destination' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Missing Earliest Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Missing Earliest Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Missing Latest Departure Date"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Missing Latest Departure Date" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'latestdeparturedate' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Missing Length of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Missing Length of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Invalid Earliest Departure Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Invalid Earliest Departure Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>01/01/1970</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Invalid Latest Departure Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Invalid Latest Departure Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'latestdeparturedate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>01/02/1970</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Invalid Date Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Invalid Date Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' must be before 'latestdeparturedate'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Type Mismatch Parameter"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Type Mismatch Parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'lengthofstay' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>foo</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>FOO</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destination</con:name><con:value>BAR</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Earliest Departure Date Exceeds Limit"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Earliest Departure Date Exceeds Limit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'earliestdeparturedate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>earliestdeparturedate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(91).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Average Ticket With Latest Departure Date Exceeds Limit"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Average Ticket With Latest Departure Date Exceeds Limit" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/historical/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'latestdeparturedate' exceeds the maximum days allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destination</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>earliestdeparturedate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>latestdeparturedate</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(91).format('yyyy-MM-dd')}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>lengthofstay</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Flights - Top Destinations"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Top Destinations" searchProperties="true" id="488594cd-85ec-41b6-9bdf-3998ab211b8c"><con:settings/><con:testStep type="httprequest" name="Get Top Destinations with All Origins"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with All Origins" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:OriginLocation</path><content>ALLORIGINS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Get Top Destinations with Origin"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with Origin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:OriginLocation</path><content>${#Project#origin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Destination Location"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def locations = holder.getNodeValues("//*[name()='Destinations']/*[name()='e']/*[name()='Destination']/*[name()='DestinationLocation']")
def ranks = holder.getNodeValues("//*[name()='Destinations']/*[name()='e']/*[name()='Rank']")

def defs = [ "OKC" , "NYC" , "DES" , "KRK" , "LAX", "MUC" ]

for (i = 0; i &lt; locations.size(); i++) {
	assert locations[i] == defs[i]
	assert Byte.valueOf(ranks[i]) == i+1
}
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations?origin=${#Project#origin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Top Destinations with Origin Country"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with Origin Country" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Origin Location"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:OriginLocation</path><content>${#Project#originCountry}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations?origincountry=${#Project#originCountry}&amp;destinationtype=International</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origincountry</con:name><con:value>${#Project#originCountry}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destinationtype</con:name><con:value>International</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Top Destinations with Top Destinations"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with Top Destinations" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations?origin=${#Project#origin}&amp;topdestinations=1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>topdestinations</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Top Destinations with Destination Type"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with Destination Type" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Country Code"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def countries = holder.getNodeValues("//*[name()='Destinations']/*[name()='e']/*[name()='Destination']/*[name()='CountryCode']")

for (i = 0; i &lt; countries.size(); ++i) {
  assert countries[i] == "US"
}</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Region"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def regions = holder.getNodeValues("//*[name()='Destinations']/*[name()='e']/*[name()='Destination']/*[name()='RegionName']")

for (i = 0; i &lt; regions.size(); ++i) {
  assert regions[i] == "North America"
}</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations?origin=${#Project#origin}&amp;destinationtype=Domestic</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destinationtype</con:name><con:value>Domestic</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Top Destinations with Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Theme"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Theme</path><content>BEACH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations?origin=${#Project#origin}&amp;theme=BEACH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>theme</con:name><con:value>BEACH</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Top Destinations with Destination Country"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with Destination Country" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Country Code"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def countries = holder.getNodeValues("//*[name()='Destinations']/*[name()='e']/*[name()='Destination']/*[name()='CountryCode']")

for (i = 0; i &lt; countries.size(); ++i) {
  assert countries[i] == "PL"
}</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations?origin=${#Project#origin}&amp;destinationcountry=PL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>destinationcountry</con:name><con:value>PL</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Top Destinations with Region"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Top Destinations with Region" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Destination Count"><con:configuration><path>count(//*[name()='Destination'])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Region"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def regions = holder.getNodeValues("//*[name()='Destinations']/*[name()='e']/*[name()='Destination']/*[name()='RegionName']")

for (i = 0; i &lt; regions.size(); ++i) {
  assert regions[i] == "Europe"
}</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='self']/ns:href</path><content>${#Project#baseUrl}/v1/lists/top/destinations?origin=${#Project#origin}&amp;region=Europe</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace ns='${#Project#baseNamespaceUrl}/v1/lists/top/destinations'
//ns:Links/ns:e[ns:rel='linkTemplate']/ns:href</path><content><![CDATA[${#Project#baseUrl}/v1/lists/top/destinations?origin=<origin>&origincountry=<origincountry>&topdestinations=<topdestinations>&destinationtype=<destinationtype>&theme=<theme>&destinationcountry=<destinationcountry>&region=<region>&lookbackweeks=<lookbackweeks>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>region</con:name><con:value>Europe</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Top Destinations Errors" searchProperties="true" id="f6e1f4a1-a509-4a90-ba47-d4b536b77d44"><con:settings/><con:testStep type="httprequest" name="Error - Get Top Destinations with Invalid Origin"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Invalid Origin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origin' must be a valid airport or city code"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Invalid Origin Country"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Invalid Origin Country" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origincountry' must be country code"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origincountry</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Both Origin and Origin Country"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Both Origin and Origin Country" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Both 'origin' and 'origincountry' have been specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>origincountry</con:name><con:value>${#Project#originCountry}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Negative Top Destinations"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Negative Top Destinations" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'topdestinations' must be between 1 and 50"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>topdestinations</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Type Mismatch Top Destinations"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Type Mismatch Top Destinations" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'topdestinations' must be of type 'number'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>topdestinations</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Invalid Destination Type"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Invalid Destination Type" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'destinationtype' must be one of {Domestic,International,Overall}"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>destinationtype</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations without Origin or Origin Country for Destination Type"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations without Origin or Origin Country for Destination Type" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Either 'origin' or 'origincountry' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>destinationtype</con:name><con:value>International</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Invalid Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Invalid Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'theme' must be one of '{BEACH,DISNEY,GAMBLING,HISTORIC,MOUNTAINS,NATIONAL-PARKS,OUTDOORS,ROMANTIC,SHOPPING,SKIING,THEME-PARK}'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>theme</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Invalid Destination Country"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Invalid Destination Country" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'destinationcountry' must be country code"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>destinationcountry</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with Invalid Region"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with Invalid Region" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'region' must be one of '{Africa,Asia Pacific,Europe,Latin America,Middle East,North America}'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>region</con:name><con:value>INVALID</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Top Destinations with No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Top Destinations with No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/top/destinations</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>XYZ</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Themes"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Theme Shopping" searchProperties="true" id="2ff0e405-db17-4961-b6f9-de58c5fde8d2"><con:settings/><con:testStep type="httprequest" name="Get Flight Fares Shop for Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Flight Fares Shop for Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;location=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/themes/<theme>/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&minfare=<minfare>&maxfare=<maxfare>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>1000</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Flight Fares Shop for Theme - spaces"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Flight Fares Shop for Theme - spaces" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;location=%20US%20%20')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/themes/<theme>/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&minfare=<minfare>&maxfare=<maxfare>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>   ${#Project#origin}    </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>   ${#Project#departureDate}    </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value> ${#Project#returnDate}   </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value> US  </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>    0      </con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>  1000     </con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Flight Fares Shop for Theme With Minimum Parameters"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Flight Fares Shop for Theme With Minimum Parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate FareInfo"><con:configuration><path>count(//*[name()='FareInfo']/*[name()='e']/*[name()='CurrencyCode' and text()='USD']) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '&amp;departuredate=')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path><![CDATA[contains(//*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/themes/<theme>/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&minfare=<minfare>&maxfare=<maxfare>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Themes"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Themes" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Theme"><con:configuration><path>count(//*[name()='Themes']/*[name()='e']/*[name()='Theme' and text()='BEACH'])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '/themes')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/themes')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Theme Destination Link"><con:configuration><path>contains(//*[name()='Themes']/*[name()='e' and *[name()='Theme' and text()='BEACH']]/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='destinations']]/*[name()='href'], '/cto-darwin-raf/v1/lists/supported/shop/themes/BEACH')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Get Destinations for Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destinations for Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/BEACH</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination"><con:configuration><path>count(//*[name()='Destinations']/*[name()='e']/*[name()='Destination' and text()='MIA'])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '/themes/BEACH')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/themes/&lt;theme>')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Shop Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Destinations']/*[name()='e' and *[name()='Destination' and text()='MIA']]/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='shopTemplate']]/*[name()='href'], 'cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=BEACH&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Valid links"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def types = holder.getNodeValues("//raf:Destinations/raf:e/raf:Type")


for( i = 0 ; i &lt; types.length; ++i){
	def no = i + 1
	type = types[i]
	path = "//raf:Destinations/raf:e["+no+"]/raf:Links/raf:e/raf:rel"
	def rels = holder.getNodeValues(path)
	def expectedRels = []
	if("Airport".equals(type)){

		 expectedRels = ["shopTemplate"] as String[]
	}else if("City".equals(type)){
		 expectedRels = ["shopTemplate", "airportsInCity"] as  String[]
	}else{
		assert false : "unknown type"
	}

	assert rels.length == expectedRels.length
	
}


</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Get Destinations for Theme - lowercase"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Destinations for Theme - lowercase" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination"><con:configuration><path>count(//*[name()='Destinations']/*[name()='e']/*[name()='Destination' and text()='MIA'])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], '/themes/beach')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='linkTemplate']]/*[name()='href'], '/cto-darwin-raf/v1/shop/themes/&lt;theme>')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Shop Template Link"><con:configuration><path><![CDATA[contains(//*[name()='Destinations']/*[name()='e' and *[name()='Destination' and text()='MIA']]/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='shopTemplate']]/*[name()='href'], 'cto-darwin-raf/v1/shop/flights/fares?origin=<origin>&departuredate=<departuredate>&returndate=<returndate>&location=<location>&theme=BEACH&minfare=<minfare>&maxfare=<maxfare>&lengthofstay=<lengthofstay>&earliestdeparturedate=<earliestdeparturedate>&latestdeparturedate=<latestdeparturedate>&pointofsalecountry=<pointofsalecountry>&region=<region>')]]></path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="restrequest" name="Themes: new endpoint"><con:settings/><con:config service="RAF - list" methodName="ThemesLookup" resourcePath="/v1/lists/supported/shop/themes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Themes: new endpoint" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/shop/themes</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="destinations for themes: new endpoint"><con:settings/><con:config service="RAF - list" methodName="DestinationsAtTheme" resourcePath="/v1/lists/supported/shop/themes/{theme}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="destinations for themes: new endpoint" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/shop/themes/BEACH</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="theme" value="BEACH" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:loadTest name="Theme Shopping"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Theme Shopping Filtering" searchProperties="true" id="b77d744c-151e-49a7-8439-1154eef21eb8"><con:settings/><con:testStep type="httprequest" name="Get Flight Fares Shop for Theme With Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Flight Fares Shop for Theme With Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 200
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>minfare</con:name><con:value>200</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Flight Fares Shop for Theme With Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Flight Fares Shop for Theme With Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) &lt;= 400
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>maxfare</con:name><con:value>400</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Flight Fares Shop for Theme With Min and Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Flight Fares Shop for Theme With Min and Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Fares"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def fares = holder.getNodeValues("//*[name()='FareInfo']/*[name()='e']/*[name()='LowestFare']")

for (i = 0; i &lt; fares.size(); ++i) {
  assert Float.valueOf(fares[i]) >= 200 &amp;&amp; Float.valueOf(fares[i]) &lt;= 400
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>origin</con:name><con:value>${#Project#origin}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>minfare</con:name><con:value>200</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>maxfare</con:name><con:value>400</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:loadTest name="Theme Shopping Filtering"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Theme Shopping Errors" searchProperties="true" id="bd0056f9-4b52-43e8-98ea-0d61cdcabd3d"><con:settings/><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Missing Origin Parameter"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Missing Origin Parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'origin' must be specified"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>United States</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Invalid Departure Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Invalid Departure Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>01/01/1970</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>United States</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Invalid Return Date Format"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Invalid Return Date Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'returndate' must have a format of 'yyyy-MM-dd' and be a valid date"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returndate</con:name><con:value>01/02/1970</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>United States</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Invalid Date Range"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Invalid Date Range" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'departuredate' must be before 'returndate'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-02</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>United States</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Invalid Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Invalid Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/FOO/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'theme' must be one of '{BEACH,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>United States</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With No Results"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With No Results" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>FOO</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Negative Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Negative Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'minfare' must be greater than or equal to 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Negative Max Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Negative Max Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than 0.0"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>-1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Max Fare Less Than Min Fare"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Max Fare Less Than Min Fare" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Parameter 'maxfare' must be greater than or equal to 'minfare'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>${#Project#departureDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>${#Project#returnDate}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>minfare</con:name><con:value>100</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>maxfare</con:name><con:value>99</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Destinations for Theme With Invalid Theme"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Destinations for Theme With Invalid Theme" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/FOO</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'theme' must be one of '{BEACH,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Error - Get Flight Fares Shop With Return Date More Than Length Of Stay"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Error - Get Flight Fares Shop With Return Date More Than Length Of Stay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/shop/themes/beach/flights/fares</con:endpoint><con:request/><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="Date range in 'departuredate' and 'returndate' exceeds the maximum allowed"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>origin</con:name><con:value>${#Project#destination}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departuredate</con:name><con:value>1970-01-01</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>returndate</con:name><con:value>1970-01-18</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>location</con:name><con:value>US</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Ancillary"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Location Resolution" searchProperties="true" id="46836871-fda7-4bf9-8e97-293c5f31b293"><con:settings/><con:testStep type="httprequest" name="Resolve Location"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Resolve Location" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/locations/Dallas</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Airports"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mac helper" searchProperties="true" id="14536a7e-aa3e-41f2-9ac4-e38b17e81c76"><con:settings/><con:testStep type="restrequest" name="for country - usa"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/cities" methodName="OldMultiAirportsCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="for country - usa" mediaType="application/xml" accept="" id="7a5ed091-719d-4853-a07e-ff29f972febe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/cities</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="two cities returned"><con:configuration><path>count(//*[name()='Cities']/*[name()='e']) >= 2</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has link to tus"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Cities/raf:e[raf:code[text()='TUS']]/raf:Links/raf:e[raf:rel[text()='airportsInCity']]/raf:href</path><content>*v1/lists/supported/cities/TUS/airports</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="linkTemplate"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?country=&lt;country></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?country=${country}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="country" value="US" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="for country - usa - lowercase"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/cities" methodName="OldMultiAirportsCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="for country - usa - lowercase" mediaType="application/xml" accept="" id="7a5ed091-719d-4853-a07e-ff29f972febe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/cities</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="two cities returned"><con:configuration><path>count(//*[name()='Cities']/*[name()='e']) >= 2</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has link to tus"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Cities/raf:e[raf:code[text()='TUS']]/raf:Links/raf:e[raf:rel[text()='airportsInCity']]/raf:href</path><content>*v1/lists/supported/cities/TUS/airports</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="linkTemplate"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?country=&lt;country></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?country=${country}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="country" value="us" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="for country - usa - spaces"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/cities" methodName="OldMultiAirportsCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="for country - usa - spaces" mediaType="application/xml" accept="" id="7a5ed091-719d-4853-a07e-ff29f972febe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/cities</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="two cities returned"><con:configuration><path>count(//*[name()='Cities']/*[name()='e']) >= 2</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has link to tus"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Cities/raf:e[raf:code[text()='TUS']]/raf:Links/raf:e[raf:rel[text()='airportsInCity']]/raf:href</path><content>*v1/lists/supported/cities/TUS/airports</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="linkTemplate"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?country=&lt;country></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?country=%20US%20%20</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="country" value=" US  " xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="for city -  washington in usa"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/airports" methodName="OldAirportsAtCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="for city -  washington in usa" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?city=${city}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?city=&lt;city></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has number of airports"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
count(//raf:Airports/raf:e)</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="hasAirportCode"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Airports/raf:e[raf:code[text()='BWI']]/raf:name</path><content>BALTIMORE WASHNTN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has number of others"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
count(//raf:Others/raf:e)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="city" value="WAS" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="for city -  washington in usa - lowercase"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/airports" methodName="OldAirportsAtCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="for city -  washington in usa - lowercase" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?city=${city}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?city=&lt;city></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has number of airports"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
count(//raf:Airports/raf:e)</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="hasAirportCode"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Airports/raf:e[raf:code[text()='BWI']]/raf:name</path><content>BALTIMORE WASHNTN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="city" value="was" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="for city -  washington in usa - spaces"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/airports" methodName="OldAirportsAtCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="for city -  washington in usa - spaces" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="has self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?city=%20WAS%20%20</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?city=&lt;city></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="has number of airports"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
count(//raf:Airports/raf:e)</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="hasAirportCode"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Airports/raf:e[raf:code[text()='BWI']]/raf:name</path><content>BALTIMORE WASHNTN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="city" value=" WAS  " xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Cities all: new endpoint"><con:settings/><con:config service="RAF - list" methodName="MultiAirportsCities" resourcePath="/v1/lists/supported/cities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Cities all: new endpoint" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/cities</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Cites at US: new endpoint"><con:settings/><con:config service="RAF - list" methodName="MultiAirportsCities" resourcePath="/v1/lists/supported/cities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Cites at US: new endpoint" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/cities</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="country" value="US" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Airports at WAS: new endpoint"><con:settings/><con:config service="RAF - list" methodName="AirportsAtCity" resourcePath="/v1/lists/supported/cities/{city}/airports" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Airports at WAS: new endpoint" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/cities/WAS/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="city" value="CI1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Airports at CI1: new endpoint"><con:settings/><con:config service="RAF - list" methodName="AirportsAtCity" resourcePath="/v1/lists/supported/cities/{city}/airports" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Airports at CI1: new endpoint" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/cities/WAS/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="city" value="WAS" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Mac helper errors" searchProperties="true" id="ba8f398e-d045-460e-9040-bdac40fafdfb"><con:settings/><con:testStep type="restrequest" name="for country - foo"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/cities" methodName="OldMultiAirportsCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="for country - foo" mediaType="application/xml" accept="" id="7a5ed091-719d-4853-a07e-ff29f972febe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="bearer ${#Project#authToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/cities</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="One of the 'country' has an unsupported value 'FOO'"]])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="country" value="FOO" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="FOO in usa"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/airports" methodName="OldAirportsAtCities" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="FOO in usa" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="bearer ${#Project#authToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Error"><con:configuration><path>count(/*[name()='Fault' and *[name()='type' and text()='Application'] and *[name()='status' and text()='Complete'] and *[name()='errorCode' and text()='WARN.RAF.APPLICATION'] and *[name()='timeStamp' and text() !=''] and *[name()='message' and text()="No results were found"]])</path><content>1</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="city" value="FOO" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="MOM"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Shopping Tests" searchProperties="true" id="54f7fdb7-4176-4824-8e64-aaba9a8dab71"><con:settings/><con:testStep type="groovy" name="Single Date Shop"><con:settings/><con:config><script><![CDATA[import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /v1/shop/flights?" +
		    "origin=" + context.expand('${#Project#origin}').toLowerCase() + "&destination=" + context.expand('${#Project#destination}').toLowerCase() +
		    "&departuredate=" + context.expand('${#Project#departureDateInstaflights}') + "&returndate=" + context.expand('${#Project#returnDateInstaflights}') +
		    "&offset=1&limit=50&sortby=totalfare&order=asc&sortby2=departuretime&order2=asc&minfare=100&maxfare=1000 HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 40000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 100000 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].startsWith('{"') : "Message body is not valid"]]></script></con:config></con:testStep><con:testStep type="groovy" name="Single Date Shop With Filters"><con:settings/><con:config><script><![CDATA[import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /v1/shop/flights?" +
		    "origin=" + context.expand('${#Project#origin}').toLowerCase() + "&destination=" + context.expand('${#Project#destination}').toLowerCase() +
		    "&departuredate=" + context.expand('${#Project#departureDateInstaflights}') + "&returndate=" + context.expand('${#Project#returnDateInstaflights}') +
		    "&offset=1&limit=50&sortby=totalfare&order=asc&sortby2=departuretime&order2=asc&minfare=100&maxfare=1000" + 
		    "&includedcarriers=UA,AA&outboundflightstops=9&outbounddeparturewindow=00302030&onlineitinerariesonly=y&inboundstopduration=999" +
		    " HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 100000 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].startsWith('{"') : "Message body is not valid::" + lines[7].substring(0,50)]]></script></con:config></con:testStep><con:testStep type="groovy" name="Future Date Lead Fare Shop"><con:settings/><con:config><script>import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /v1/shop/flights/fares?" +
		    "origin=" + context.expand('${#Project#origin}') + "&amp;destination=" + context.expand('${#Project#destination}') +
		    "&amp;lengthofstay=10&amp;minfare=100&amp;maxfare=1000 HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 500 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].startsWith('{"OriginLocation":') : "Message body is not valid"</script></con:config></con:testStep><con:testStep type="groovy" name="Future Date Lead Fare Shop With Multi Values"><con:settings/><con:config><script>import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /v1/shop/flights/fares?" +
		    "origin=" + context.expand('${#Project#origin}') + "&amp;destination=" + context.expand('${#Project#destination}') +
		    "&amp;lengthofstay=10%2C8,6&amp;lengthofstay=4&amp;departuredate=" + context.expand('${#Project#departureDate}') + 
		    " HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 500 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].startsWith('{"OriginLocation":') : "Message body is not valid"</script></con:config></con:testStep><con:testStep type="groovy" name="Destination Lead Fare Shop"><con:settings/><con:config><script><![CDATA[import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /v1/shop/flights/fares?" +
		    "origin=" + context.expand('${#Project#origin}') + "&departuredate=" + context.expand('${#Project#departureDate}') +
		    "&returndate=" + context.expand('${#Project#returnDate}') +
		    "&location=US&theme=BEACH&minfare=100&maxfare=1000 HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 1000 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].startsWith('{"OriginLocation":') : "Message body is not valid"]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Error Tests" searchProperties="true" id="43f54225-d94d-4db0-a675-778fe92ea9ba"><con:settings/><con:testStep type="groovy" name="Bad Request Test"><con:settings/><con:config><script>import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /v1/shop/flights HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 400 Bad Request" : "Status code was not 400"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 100 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].matches('\\{"status":"NotProcessed","reportingSystem":"RAF","timeStamp":"\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+00:00","type":"Validation","errorCode":"ERR.RAF.VALIDATION","instance":"raf-.*-.*","message":"Parameter \'origin\' must be specified",.*') : "Message body is not valid"</script></con:config></con:testStep><con:testStep type="groovy" name="Not Found Test (No application results)"><con:settings/><con:config><script><![CDATA[import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /v1/shop/flights?" +
		    "origin=origin&destination=destination&departuredate=" + 
		    context.expand('${#Project#departureDate}') + "&returndate=" + context.expand('${#Project#returnDate}') +
		    "&offset=1&limit=50&sortby=totalfare&order=asc&sortby2=departuretime&order2=asc&minfare=100&maxfare=1000 HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 404 Not Found" : "Status code was not 404"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 100 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].matches('\\{"status":"Complete","reportingSystem":"RAF","timeStamp":"\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+00:00","type":"Application","errorCode":"WARN.RAF.APPLICATION","instance":"raf-.*-.*","message":"No results were found",.*') : "Message body is not valid"]]></script></con:config></con:testStep><con:testStep type="groovy" name="Not Found Test (No application endpoint)"><con:settings/><con:config><script>import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /bad_endpoint HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")
log.info response
assert lines[0].trim() == "HTTP/1.1 404 Not Found" : "Status code was not 404"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not HTML"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 100 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].matches('\\{"status":"Complete","reportingSystem":"RAF","timeStamp":"\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+00:00","type":"Application","errorCode":"WARN.RAF.APPLICATION","instance":"raf-.*-.*","message":"No results were found",.*') : "Message body is not valid"</script></con:config></con:testStep><con:testStep type="groovy" name="Internal Server Error Test"><con:settings/><con:config><script>import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "invalid HTTP message"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		def start = System.currentTimeMillis()
		response = service.sendAndReceive(request, 10000).text
	
		log.info "REQ took " + (System.currentTimeMillis() - start) + "ms"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}

def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 500 Internal Server Error" : "Status code was not 500"
assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 100 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].matches('\\{"status":"Unknown","reportingSystem":"RAF","timeStamp":"\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\+00:00","type":"Application","errorCode":"ERR.RAF.APPLICATION","instance":"raf-.*-.*","message":"An unexpected error has occurred",.*') : "Message body is not valid"
assert lines.length == 8 : "Too many lines in output"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Admin Tests" searchProperties="true" id="116f4d62-de0d-4e55-bedc-303ed4b14963"><con:settings/><con:testStep type="groovy" name="Cache Management"><con:settings/><con:config><script>import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

try {
     def response = ""
	
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		// SET
		def httpRequest = "PUT /admin/cache/AuxiliaryData/mom_test HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Content-Type: application/json\n" +
              "Content-Length: 24\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n" +
              '{"mom_name":"mom_value"}\n\n'
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		response = service.sendAndReceive(request, 10000).text
	
		def lines = response.split("\n")

		assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
		assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
		assert Integer.valueOf(lines[3].trim().split(" ")[1]) == 32 : "Content length was not correct"
		assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
		assert lines[7] == '{"message":"Key/value inserted"}' : "Message body is not valid"

          // GET
		httpRequest = "GET /admin/cache/AuxiliaryData/mom_test HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		response = service.sendAndReceive(request, 10000).text
		
		lines = response.split("\n")

		assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
		assert lines[2].trim() == "Content-Type: text/plain" : "Content type was not plain text"
		assert Integer.valueOf(lines[3].trim().split(" ")[1]) == 24 : "Content length was not correct"
		assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
		assert lines[7] == '{"mom_name":"mom_value"}' : "Message body is not valid"

          // DELETE
		httpRequest = "DELETE /admin/cache/AuxiliaryData/mom_test HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		response = service.sendAndReceive(request, 10000).text
		
		lines = response.split("\n")

		assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
		assert lines[2].trim() == "Content-Type: application/json" : "Content type was not JSON"
		assert Integer.valueOf(lines[3].trim().split(" ")[1]) == 31 : "Content length was not correct"
		assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
		assert lines[7] == '{"message":"Key/value deleted"}' : "Message body is not valid"


          // GET
		httpRequest = "GET /admin/cache/AuxiliaryData/mom_test HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		response = service.sendAndReceive(request, 10000).text
		
		lines = response.split("\n")

		assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
		assert lines[2].trim() == "Content-Type: text/plain" : "Content type was not plain text"
          assert lines[3].trim() == "Content-Length: 0" : "Content length was not zero"
          assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
          assert lines.length == 7 : "Too many lines in output"
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}</script></con:config></con:testStep><con:testStep type="groovy" name="eLogging Metrics"><con:settings/><con:config><script>import com.sabre.messaging.service.MessageContextFactory;
import com.sabre.messaging.service.Service.Mode;
import com.sabre.messaging.service.ServiceManager;

def response = ""

try {
	def service = ServiceManager.getInstance().getService(context.expand('${#Project#environment}') + "-RafService", Mode.SYNCHRONOUS)
	service.start()
	
	try {
		def httpRequest = "GET /admin/monitor/elogging/MonitorSummary HTTP/1.1\n" +
              "Accept-Encoding: gzip,deflate\n" +
              "Host: localhost:8080\n" +
              "Connection: Keep-Alive\n" +
              "User-Agent: Apache-HttpClient/4.1.1 (java 1.5)\n\n"
		def request = MessageContextFactory.createMessageContext(httpRequest)
		request.setUserProperty('EnvType', context.expand('${#Project#environment}'))
		response = service.sendAndReceive(request, 10000).text
	} finally {
		service.stop()
		ServiceManager.close()
	}
} catch(Exception ex) {
	log.error "whoops!", ex
}
		
def lines = response.split("\n")

assert lines[0].trim() == "HTTP/1.1 200 OK" : "Status code was not 200"
assert lines[2].trim() == "Content-Type: text/html" : "Content type was not HTML"
assert Integer.valueOf(lines[3].trim().split(" ")[1]) > 1000 : "Content length was not long enough"
assert lines[5].trim().matches("X-Provider-Instance-ID: .*?-.*?-.*?")
assert lines[7].startsWith('&lt;!--MONITOR_SUMMARY:') : "Message body is not valid"</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="OrigsDests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET" searchProperties="true" id="f1434935-6e02-454e-aff7-9b61c381089c"><con:settings/><con:testStep type="restrequest" name="lists all" disabled="true"><con:settings/><con:config service="RAF - list" resourcePath="/v1/lists/airports/supported/origins-destinations" methodName="OldCityPairsLookup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="lists all" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="byOriginCountry" disabled="true"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="byOriginCountry" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?origincountry=${origincountry}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="origincountry" value="US" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="byDestCountry" disabled="true"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="byDestCountry" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?destinationcountry=${destinationcountry}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationcountry" value="PL" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="byOriginRegion" disabled="true"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="byOriginRegion" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?originregion=${originregion}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="originregion" value="Americas" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="byDestRegion" disabled="true"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="byDestRegion" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?destinationregion=${destinationregion}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationregion" value="Europe" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filterAll"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filterAll" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>&pointofsalecountry=<pointofsalecountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (originregion)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'originregion=Americas')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (destinationregion)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'destinationregion=Europe')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (origincountry)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'origincountry=US')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (destinationcountry)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'destinationcountry=DE')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="destinationcountry" value="DE"/>
  <con:entry key="origincountry" value="US"/>
  <con:entry key="destinationregion" value="Europe"/>
  <con:entry key="originregion" value="Americas"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filterAll - lowercase"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filterAll - lowercase" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>&pointofsalecountry=<pointofsalecountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (originregion)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'originregion=americas')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (destinationregion)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'destinationregion=europe')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (origincountry)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'origincountry=us')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (destinationcountry)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'destinationcountry=de')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="destinationcountry" value="de"/>
  <con:entry key="origincountry" value="us"/>
  <con:entry key="destinationregion" value="europe"/>
  <con:entry key="originregion" value="americas"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filterAll - spaces"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filterAll - spaces" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="template link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*v1/lists/airports/supported/origins-destinations?destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>&pointofsalecountry=<pointofsalecountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (originregion)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'originregion=%20%20Americas%20%20')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (destinationregion)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'destinationregion=%20%20Europe')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (origincountry)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'origincountry=%20%20US%20')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="self link (destinationcountry)"><con:configuration><path>contains(/*[name()='Response']/*[name()='Links']/*[name()='e' and *[name()='rel' and text()='self']]/*[name()='href'], 'destinationcountry=%20DE%20%20')</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="destinationregion" value="  Europe"/>
  <con:entry key="destinationcountry" value=" DE  "/>
  <con:entry key="originregion" value="  Americas  "/>
  <con:entry key="origincountry" value="  US "/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ERROR" searchProperties="true" id="26e7eb81-3662-4e47-afc1-d2d114a0268f"><con:settings/><con:testStep type="restrequest" name="wrong dest region"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong dest region" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="error message"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'destinationregion' must be one of '{Africa,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationregion" value="Wrong" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong orig region"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong orig region" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'originregion' must be one of '{Africa,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="originregion" value="Wrong" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong dest country"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong dest country" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'destinationcountry' must be country code")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationcountry" value="Wrong" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong orig country"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong orig country" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'origincountry' must be country code")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="origincountry" value="Wrong" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong pos"><con:settings/><con:config service="RAF - list" methodName="OldCityPairsLookup" resourcePath="/v1/lists/airports/supported/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong pos" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'pointofsalecountry' has an unsupported value")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="pointofsalecountry" value="Wrong" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MonitorSummary" searchProperties="true" id="f75cbe94-2100-4c20-86f1-d8e9ca5e59ea"><con:settings/><con:testStep type="httprequest" name="Retrieve Monitor Summary"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Retrieve Monitor Summary" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/monitor/elogging/MonitorSummary</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>count(//th[text()='WebApp Enterprise Logging Summary']) = 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Cache" searchProperties="true" id="031971ff-e64e-4de4-939e-fe2769c8d714"><con:settings/><con:testStep type="httprequest" name="Set Value"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" name="Set Value" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/test</con:endpoint><con:request>{"name":"value"}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Message"><con:configuration><path>//*[name()='message']</path><content>Key/value inserted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Get Value"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Value" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/test</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Response"><con:configuration><path>//data</path><content>{"name":"value"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Delete Value"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" name="Delete Value" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/cache/AuxiliaryData/test</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Response"><con:configuration><path>//*[name()='message']</path><content>Key/value deleted</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Metrics TPS" searchProperties="true" id="5cef7db9-f786-4c1d-ae5e-1405db7bcb11"><con:settings/><con:testStep type="httprequest" name="Retrieve TPS Charts"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Retrieve TPS Charts" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/monitor/metrics/tps</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>//title</path><content>Metrics TPS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Retrieve TPS Current"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Retrieve TPS Current" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/monitor/metrics/tps/current</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>count(//tr[td='GET-/admin/monitor/metrics/tps/current']/td[1]) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Retrieve TPS Data"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Retrieve TPS Data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/monitor/metrics/tps/data</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>count(//e[metric='GET-/admin/monitor/metrics/tps/data']/tps) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Misc" searchProperties="true" id="78e392c3-45cb-4228-8300-9e990ec995d6"><con:settings/><con:testStep type="httprequest" name="Retrieve Endpoints"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Retrieve Endpoints" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/endpoints</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>count(/html/body/table/tr/td/a[text()='/admin/endpoints'])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Retrieve Build Info"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Retrieve Build Info" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/build</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Execute Health Checks"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Execute Health Checks" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/admin/health/checks</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Couchbase Test"><con:configuration><path>count(//tr[td='Couchbase' and td[span='true']])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate MOM 2SG Test"><con:configuration><path>count(//tr[td='MOM-2SG' and td[span='true']])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate MOM EIAPI Test"><con:configuration><path>count(//tr[td='MOM-EIAPI' and td[span='true']])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Lookup Helper"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Countries Lookup" searchProperties="true" id="b8042170-9fc3-4844-ad1c-ca6051a4c991"><con:settings/><con:testStep type="httprequest" name="POS Countries Lookup"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="POS Countries Lookup" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/supported/pointofsalecountries</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Validate Country Codes"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def codes = holder.getNodeValues("//raf:CountryCode")
arr = ["BR", "DE", "AR", "SE", "RU", "GR", "IT", "MX", "GB", "US", "CA", "NL"]
assert codes.size() == arr.size()
for (int i = 0; i &lt; arr.size(); i++) {
	assert codes[i].equals(arr[i]);
}
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/lists/supported/pointofsalecountries'
//raf:Links/raf:e[raf:rel[text()="self"]]/raf:href</path><content>${=request.path}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/lists/supported/pointofsalecountries'
//raf:Links/raf:e[raf:rel[text()="linkTemplate"]]/raf:href</path><content>*/v1/lists/supported/pointofsalecountries</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Countries Lookup for DE POS"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Countries Lookup for DE POS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/supported/countries</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Validate Country Codes"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def Origin = holder.getNodeValues("//raf:OriginCountries")
def Dest = holder.getNodeValues("//raf:DestinationCountries")
def PointOfSale = holder.getNodeValues("//raf:PointOfSale")
assert PointOfSale == ["DE"]
assert Origin.size() > 0;
assert Dest.size() > 0;
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate Point of Sale"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def pos = holder.getNodeValues("//*[name()='PointOfSale']")

assert pos.size() == 1
assert pos[0].equals("DE");</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/lists/supported/countries'
//raf:Links/raf:e[raf:rel[text()="self"]]/raf:href</path><content>${=request.path}?pointofsalecountry=DE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/lists/supported/countries'
//raf:Links/raf:e[raf:rel[text()="linkTemplate"]]/raf:href</path><content>*v1/lists/supported/countries?pointofsalecountry=&lt;pointofsalecountry></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>pointofsalecountry</con:name><con:value>DE</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Countries Lookup for default POS"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Countries Lookup for default POS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#baseUrl}/v1/lists/supported/countries</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Validate Point of Sale"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)
def namespace =  context.expand( messageExchange.modelItem.path).replaceAll(":[0-9]+", "")
holder.declareNamespace("raf",namespace )
def Origin = holder.getNodeValues("//raf:OriginCountries")
def Dest = holder.getNodeValues("//raf:DestinationCountries")
def PointOfSale = holder.getNodeValues("//raf:PointOfSale")
assert PointOfSale == ["US"]
assert Origin.size() > 0;
assert Dest.size() > 0;
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/lists/supported/countries'
//raf:Links/raf:e[raf:rel[text()="self"]]/raf:href</path><content>${=request.path}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}/v1/lists/supported/countries'
//raf:Links/raf:e[raf:rel[text()="linkTemplate"]]/raf:href</path><content>*v1/lists/supported/countries?pointofsalecountry=&lt;pointofsalecountry></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FareForecastCityPairs" searchProperties="true" id="aa7a5598-d890-413f-a0c7-53e1e3958907"><con:settings/><con:testStep type="restrequest" name="w/o filters"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="w/o filters" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/forecast/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by destination region"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by destination region" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/forecast/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Region"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:DestinationLocation/raf:RegionName</path><content>${destinationregion}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?destinationregion=${destinationregion}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationregion" value="Europe" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by origin region"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by origin region" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/forecast/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Region"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:OriginLocation/raf:RegionName</path><content>${originregion}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?originregion=${originregion}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="originregion" value="Europe" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by origin country"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by origin country" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/forecast/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Country"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:OriginLocation/raf:CountryCode</path><content>${origincountry}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?origincountry=${origincountry}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="origincountry" value="GB" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by destination country"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by destination country" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/forecast/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Country"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:DestinationLocation/raf:CountryCode</path><content>${destinationcountry}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?destinationcountry=${destinationcountry}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationcountry" value="GB" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FareForecastCityPairs Errors" searchProperties="true" id="5a63bb27-ba0d-4e6c-a2e2-b2f646acd4db"><con:settings/><con:testStep type="restrequest" name="wrong orig region"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong orig region" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'originregion' must be one of '{Africa,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="originregion" value="Atlantida" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong dest region"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong dest region" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'destinationregion' must be one of '{Africa,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationregion" value="Atlantida" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong orig country"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong orig country" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'origincountry' must be country code")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="origincountry" value="UK" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong dest country"><con:settings/><con:config service="RAF - list" methodName="FareForecastCityPairsLookup" resourcePath="/v1/lists/supported/forecast/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong dest country" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'destinationcountry' must be country code")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationcountry" value="UK" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FareRangeCityPairs" searchProperties="true" id="77e484ec-0332-4819-862b-13983c9965e0"><con:settings/><con:testStep type="restrequest" name="w/o filters"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="w/o filters" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by destination region"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by destination region" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Region"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:DestinationLocation/raf:RegionName</path><content>${destinationregion}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?destinationregion=${destinationregion}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationregion" value="Europe" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by origin region"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by origin region" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Region"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:OriginLocation/raf:RegionName</path><content>${originregion}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?originregion=${originregion}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="originregion" value="Europe" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by origin country"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by origin country" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Origin Country"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:OriginLocation/raf:CountryCode</path><content>${origincountry}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?origincountry=${origincountry}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="origincountry" value="GB" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by destination country"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by destination country" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/flights/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Destination Country"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:OriginDestinationLocations/raf:e/raf:DestinationLocation/raf:CountryCode</path><content>${destinationcountry}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content><![CDATA[*${=request.path}?*destinationregion=<destinationregion>&originregion=<originregion>&destinationcountry=<destinationcountry>&origincountry=<origincountry>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?destinationcountry=${destinationcountry}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationcountry" value="GB" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FareRangeCityPairs Errors" searchProperties="true" id="bca78aab-3bf3-4eef-974b-9dfdefc51c50"><con:settings/><con:testStep type="restrequest" name="wrong orig region"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong orig region" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'originregion' must be one of '{Africa,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="originregion" value="Atlantida" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong dest region"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong dest region" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'destinationregion' must be one of '{Africa,")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationregion" value="Atlantida" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong orig country"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong orig country" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'origincountry' must be country code")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="origincountry" value="UK" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="wrong dest country"><con:settings/><con:config service="RAF - list" methodName="FareRangeCityPairsLookup" resourcePath="/v1/lists/supported/historical/flights/origins-destinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="wrong dest country" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/airports/supported/origins-destinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>contains(/*[name()='Fault' and *[name()='type' and text()='Validation'] and *[name()='status' and text()='NotProcessed'] and *[name()='errorCode' and text()='ERR.RAF.VALIDATION'] and *[name()='reportingSystem' and text()='RAF'] and *[name()='instance' and text() != ''] and *[name()='timeStamp' and text() !='']]/*[name()='message'],"Parameter 'destinationcountry' must be country code")</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="destinationcountry" value="UK" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SeasonalityAirports" searchProperties="true" id="756c4a96-957c-401a-a971-6a9c29c14420"><con:settings/><con:testStep type="restrequest" name="w/o filters"><con:settings/><con:config service="RAF - list" methodName="SeasonalityAirportsLookup" resourcePath="/v1/lists/supported/historical/seasonality/airports" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="w/o filters" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/seasonality/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?*country=&lt;country>&amp;region=&lt;region></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by region"><con:settings/><con:config service="RAF - list" methodName="SeasonalityAirportsLookup" resourcePath="/v1/lists/supported/historical/seasonality/airports" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by region" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/seasonality/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Region"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:DestinationLocations/raf:e/raf:DestinationLocation/raf:RegionName</path><content>${region}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Link Template"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='linkTemplate']]/raf:href</path><content>*${=request.path}?*country=&lt;country>&amp;region=&lt;region></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Validate Self Link"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:Links/raf:e[raf:rel[text()='self']]/raf:href</path><content>*${=request.path}?region=${region}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="region" value="Europe" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="filter by country" disabled="true"><con:settings/><con:config service="RAF - list" methodName="SeasonalityAirportsLookup" resourcePath="/v1/lists/supported/historical/seasonality/airports" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="filter by country" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#baseUrl}</con:endpoint><con:request/><con:originalUri>http://ctovm2453.dev.sabre.com/cto-darwin-raf/v1/lists/supported/historical/seasonality/airports</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace raf='${#Project#baseNamespaceUrl}${=request.path}';
//raf:DestinationLocations/raf:e/raf:DestinationLocation/raf:RegionName</path><content>${country}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="country" value="GB" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>baseUrl</con:name><con:value>http://ctovm2453.dev.sabre.com:8080/cto-darwin-raf</con:value></con:property><con:property><con:name>departureDate</con:name><con:value>${=new Date().format('yyyy-MM-dd')}</con:value></con:property><con:property><con:name>returnDate</con:name><con:value>${=new Date().next().format('yyyy-MM-dd')}</con:value></con:property><con:property><con:name>origin</con:name><con:value>ORG</con:value></con:property><con:property><con:name>destination</con:name><con:value>DES</con:value></con:property><con:property><con:name>destinationLowercase</con:name><con:value>des</con:value></con:property><con:property><con:name>environment</con:name><con:value>ci</con:value></con:property><con:property><con:name>baseNamespaceUrl</con:name><con:value>http://ctovm2453.dev.sabre.com/cto-darwin-raf</con:value></con:property><con:property><con:name>dateOverTheRange</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(193).format('yyyy-MM-dd')}</con:value></con:property><con:property><con:name>pointofsalecountry</con:name><con:value>DE</con:value></con:property><con:property><con:name>departureDateInstaflights</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#departureDate}').plus(2).format('yyyy-MM-dd')}</con:value></con:property><con:property><con:name>returnDateInstaflights</con:name><con:value>${=Date.parse('yyyy-MM-dd','${#Project#returnDate}').plus(2).format('yyyy-MM-dd')}</con:value></con:property><con:property><con:name>secondorigin</con:name><con:value>OR9</con:value></con:property><con:property><con:name>originCountry</con:name><con:value>US</con:value></con:property><con:property><con:name>secondReturnDate</con:name><con:value>${=new Date().next().next().format('yyyy-MM-dd')}</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>